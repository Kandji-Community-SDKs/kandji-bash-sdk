/**
 * Kandji API
 * <html><head></head><body><h1 id=\"welcome-to-the-kandji-api-documentation\">Welcome to the Kandji API Documentation</h1>\\n<p>You can find your API URL in Settings &gt; Access. The API URL will follow the below formats.</p>\\n<ul>\\n<li><p>US - <code>https://SubDomain.api.kandji.io</code></p>\\n</li>\\n<li><p>EU - <code>https://SubDomain.api.eu.kandji.io</code></p>\\n</li>\\n</ul>\\n<p>For information on how to obtain an API token, please refer to the following support article.</p>\\n<p><a href=\"https://support.kandji.io/api\">https://support.kandji.io/api</a></p>\\n<h4 id=\"rate-limit\">Rate Limit</h4>\\n<p>The Kandji API currently has an API rate limit of 10,000 requests per hour per customer.</p>\\n<h4 id=\"request-methods\">Request Methods</h4>\\n<p>HTTP request methods supported by the Kandji API.</p>\\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th>Method</th>\\n<th>Definition</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GET</td>\\n<td>The <code>GET</code> method requests a representation of the specified resource.</td>\\n</tr>\\n<tr>\\n<td>POST</td>\\n<td>The <code>POST</code> method submits an entity to the specified resource.</td>\\n</tr>\\n<tr>\\n<td>PATCH</td>\\n<td>The <code>PATCH</code> method applies partial modifications to a resource.</td>\\n</tr>\\n<tr>\\n<td>DELETE</td>\\n<td>The <code>DELETE</code> method deletes the specified resource.</td>\\n</tr>\\n</tbody>\\n</table>\\n</div><h4 id=\"response-codes\">Response codes</h4>\\n<p>Not all response codes apply to every endpoint.</p>\\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th>Code</th>\\n<th>Response</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>200</td>\\n<td>OK</td>\\n</tr>\\n<tr>\\n<td>201</td>\\n<td>Created</td>\\n</tr>\\n<tr>\\n<td>204</td>\\n<td>No content</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>Typical response when sending the DELETE method.</td>\\n</tr>\\n<tr>\\n<td>400</td>\\n<td>Bad Request</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"Command already running\" - The command may already be running in a <em>Pending</em> state waiting on the device.</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"Command is not allowed for current device\" - The command may not be compatible with the target device.</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"JSON parse error - Expecting ',' delimiter: line 3 column 2 (char 65)\"</td>\\n</tr>\\n<tr>\\n<td>401</td>\\n<td>Unauthorized</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>This error can occur if the token is incorrect, was revoked, or the token has expired.</td>\\n</tr>\\n<tr>\\n<td>403</td>\\n<td>Forbidden</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>The request was understood but cannot be authorized.</td>\\n</tr>\\n<tr>\\n<td>404</td>\\n<td>Not found</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>Unable to locate the resource in the Kandji tenant.</td>\\n</tr>\\n<tr>\\n<td>415</td>\\n<td>Unsupported Media Type</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>The request contains a media type which the server or resource does not support.</td>\\n</tr>\\n<tr>\\n<td>500</td>\\n<td>Internal server error</td>\\n</tr>\\n<tr>\\n<td>503</td>\\n<td>Service unavailable</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>This error can occur if a file upload is still being processed via the custom apps API.</td>\\n</tr>\\n</tbody>\\n</table>\\n</div><h4 id=\"data-structure\">Data structure</h4>\\n<p>The API returns all structured responses in JSON schema format.</p>\\n<h4 id=\"examples\">Examples</h4>\\n<p>Code examples using the API can be found in the Kandji support <a href=\"https://github.com/kandji-inc/support/tree/main/api-tools\">GitHub</a>.</p>\\n</body></html>
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KandjiApi);
  }
}(this, function(expect, KandjiApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KandjiApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('apiV1BlueprintsBlueprintIdAssignLibraryItemPost', function() {
      it('should call apiV1BlueprintsBlueprintIdAssignLibraryItemPost successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdAssignLibraryItemPost
        //instance.apiV1BlueprintsBlueprintIdAssignLibraryItemPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsBlueprintIdDelete', function() {
      it('should call apiV1BlueprintsBlueprintIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdDelete
        //instance.apiV1BlueprintsBlueprintIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsBlueprintIdGet', function() {
      it('should call apiV1BlueprintsBlueprintIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdGet
        //instance.apiV1BlueprintsBlueprintIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsBlueprintIdListLibraryItemsGet', function() {
      it('should call apiV1BlueprintsBlueprintIdListLibraryItemsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdListLibraryItemsGet
        //instance.apiV1BlueprintsBlueprintIdListLibraryItemsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsBlueprintIdOtaEnrollmentProfileGet', function() {
      it('should call apiV1BlueprintsBlueprintIdOtaEnrollmentProfileGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdOtaEnrollmentProfileGet
        //instance.apiV1BlueprintsBlueprintIdOtaEnrollmentProfileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsBlueprintIdPatch', function() {
      it('should call apiV1BlueprintsBlueprintIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdPatch
        //instance.apiV1BlueprintsBlueprintIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsBlueprintIdRemoveLibraryItemPost', function() {
      it('should call apiV1BlueprintsBlueprintIdRemoveLibraryItemPost successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsBlueprintIdRemoveLibraryItemPost
        //instance.apiV1BlueprintsBlueprintIdRemoveLibraryItemPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsGet', function() {
      it('should call apiV1BlueprintsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsGet
        //instance.apiV1BlueprintsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsPost', function() {
      it('should call apiV1BlueprintsPost successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsPost
        //instance.apiV1BlueprintsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BlueprintsTemplatesGet', function() {
      it('should call apiV1BlueprintsTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BlueprintsTemplatesGet
        //instance.apiV1BlueprintsTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionBlankpushPost', function() {
      it('should call apiV1DevicesDeviceIdActionBlankpushPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionBlankpushPost
        //instance.apiV1DevicesDeviceIdActionBlankpushPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionClearpasscodePost', function() {
      it('should call apiV1DevicesDeviceIdActionClearpasscodePost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionClearpasscodePost
        //instance.apiV1DevicesDeviceIdActionClearpasscodePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionDeleteuserPost', function() {
      it('should call apiV1DevicesDeviceIdActionDeleteuserPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionDeleteuserPost
        //instance.apiV1DevicesDeviceIdActionDeleteuserPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionDisablelostmodePost', function() {
      it('should call apiV1DevicesDeviceIdActionDisablelostmodePost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionDisablelostmodePost
        //instance.apiV1DevicesDeviceIdActionDisablelostmodePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionEnablelostmodePost', function() {
      it('should call apiV1DevicesDeviceIdActionEnablelostmodePost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionEnablelostmodePost
        //instance.apiV1DevicesDeviceIdActionEnablelostmodePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionErasePost', function() {
      it('should call apiV1DevicesDeviceIdActionErasePost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionErasePost
        //instance.apiV1DevicesDeviceIdActionErasePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionLockPost', function() {
      it('should call apiV1DevicesDeviceIdActionLockPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionLockPost
        //instance.apiV1DevicesDeviceIdActionLockPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionPlaylostmodesoundPost', function() {
      it('should call apiV1DevicesDeviceIdActionPlaylostmodesoundPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionPlaylostmodesoundPost
        //instance.apiV1DevicesDeviceIdActionPlaylostmodesoundPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionReinstallagentPost', function() {
      it('should call apiV1DevicesDeviceIdActionReinstallagentPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionReinstallagentPost
        //instance.apiV1DevicesDeviceIdActionReinstallagentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionRemotedesktopPost', function() {
      it('should call apiV1DevicesDeviceIdActionRemotedesktopPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionRemotedesktopPost
        //instance.apiV1DevicesDeviceIdActionRemotedesktopPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionRenewmdmprofilePost', function() {
      it('should call apiV1DevicesDeviceIdActionRenewmdmprofilePost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionRenewmdmprofilePost
        //instance.apiV1DevicesDeviceIdActionRenewmdmprofilePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionRestartPost', function() {
      it('should call apiV1DevicesDeviceIdActionRestartPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionRestartPost
        //instance.apiV1DevicesDeviceIdActionRestartPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionSetnamePost', function() {
      it('should call apiV1DevicesDeviceIdActionSetnamePost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionSetnamePost
        //instance.apiV1DevicesDeviceIdActionSetnamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionShutdownPost', function() {
      it('should call apiV1DevicesDeviceIdActionShutdownPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionShutdownPost
        //instance.apiV1DevicesDeviceIdActionShutdownPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionUnlockaccountPost', function() {
      it('should call apiV1DevicesDeviceIdActionUnlockaccountPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionUnlockaccountPost
        //instance.apiV1DevicesDeviceIdActionUnlockaccountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionUpdateinventoryPost', function() {
      it('should call apiV1DevicesDeviceIdActionUpdateinventoryPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionUpdateinventoryPost
        //instance.apiV1DevicesDeviceIdActionUpdateinventoryPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActionUpdatelocationPost', function() {
      it('should call apiV1DevicesDeviceIdActionUpdatelocationPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActionUpdatelocationPost
        //instance.apiV1DevicesDeviceIdActionUpdatelocationPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdActivitylimit300Get', function() {
      it('should call apiV1DevicesDeviceIdActivitylimit300Get successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdActivitylimit300Get
        //instance.apiV1DevicesDeviceIdActivitylimit300Get(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdAppsGet', function() {
      it('should call apiV1DevicesDeviceIdAppsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdAppsGet
        //instance.apiV1DevicesDeviceIdAppsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdCommandslimit300Get', function() {
      it('should call apiV1DevicesDeviceIdCommandslimit300Get successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdCommandslimit300Get
        //instance.apiV1DevicesDeviceIdCommandslimit300Get(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdDelete', function() {
      it('should call apiV1DevicesDeviceIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdDelete
        //instance.apiV1DevicesDeviceIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdDetailsGet', function() {
      it('should call apiV1DevicesDeviceIdDetailsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdDetailsGet
        //instance.apiV1DevicesDeviceIdDetailsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdDetailsLostmodeDelete', function() {
      it('should call apiV1DevicesDeviceIdDetailsLostmodeDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdDetailsLostmodeDelete
        //instance.apiV1DevicesDeviceIdDetailsLostmodeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdDetailsLostmodeGet', function() {
      it('should call apiV1DevicesDeviceIdDetailsLostmodeGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdDetailsLostmodeGet
        //instance.apiV1DevicesDeviceIdDetailsLostmodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdGet', function() {
      it('should call apiV1DevicesDeviceIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdGet
        //instance.apiV1DevicesDeviceIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdLibraryItemsGet', function() {
      it('should call apiV1DevicesDeviceIdLibraryItemsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdLibraryItemsGet
        //instance.apiV1DevicesDeviceIdLibraryItemsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdNotesGet', function() {
      it('should call apiV1DevicesDeviceIdNotesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdNotesGet
        //instance.apiV1DevicesDeviceIdNotesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdNotesNoteIdDelete', function() {
      it('should call apiV1DevicesDeviceIdNotesNoteIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdNotesNoteIdDelete
        //instance.apiV1DevicesDeviceIdNotesNoteIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdNotesNoteIdGet', function() {
      it('should call apiV1DevicesDeviceIdNotesNoteIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdNotesNoteIdGet
        //instance.apiV1DevicesDeviceIdNotesNoteIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdNotesNoteIdPatch', function() {
      it('should call apiV1DevicesDeviceIdNotesNoteIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdNotesNoteIdPatch
        //instance.apiV1DevicesDeviceIdNotesNoteIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdNotesPost', function() {
      it('should call apiV1DevicesDeviceIdNotesPost successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdNotesPost
        //instance.apiV1DevicesDeviceIdNotesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdParametersGet', function() {
      it('should call apiV1DevicesDeviceIdParametersGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdParametersGet
        //instance.apiV1DevicesDeviceIdParametersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdPatch', function() {
      it('should call apiV1DevicesDeviceIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdPatch
        //instance.apiV1DevicesDeviceIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdSecretsBypasscodeGet', function() {
      it('should call apiV1DevicesDeviceIdSecretsBypasscodeGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdSecretsBypasscodeGet
        //instance.apiV1DevicesDeviceIdSecretsBypasscodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdSecretsFilevaultkeyGet', function() {
      it('should call apiV1DevicesDeviceIdSecretsFilevaultkeyGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdSecretsFilevaultkeyGet
        //instance.apiV1DevicesDeviceIdSecretsFilevaultkeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdSecretsRecoverypasswordGet', function() {
      it('should call apiV1DevicesDeviceIdSecretsRecoverypasswordGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdSecretsRecoverypasswordGet
        //instance.apiV1DevicesDeviceIdSecretsRecoverypasswordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdSecretsUnlockpinGet', function() {
      it('should call apiV1DevicesDeviceIdSecretsUnlockpinGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdSecretsUnlockpinGet
        //instance.apiV1DevicesDeviceIdSecretsUnlockpinGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1DevicesDeviceIdStatusGet', function() {
      it('should call apiV1DevicesDeviceIdStatusGet successfully', function(done) {
        //uncomment below and update the code to test apiV1DevicesDeviceIdStatusGet
        //instance.apiV1DevicesDeviceIdStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1Deviceslimit300Get', function() {
      it('should call apiV1Deviceslimit300Get successfully', function(done) {
        //uncomment below and update the code to test apiV1Deviceslimit300Get
        //instance.apiV1Deviceslimit300Get(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeAdeTokenIdDelete', function() {
      it('should call apiV1IntegrationsAppleAdeAdeTokenIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeAdeTokenIdDelete
        //instance.apiV1IntegrationsAppleAdeAdeTokenIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeAdeTokenIdDevicesGet', function() {
      it('should call apiV1IntegrationsAppleAdeAdeTokenIdDevicesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeAdeTokenIdDevicesGet
        //instance.apiV1IntegrationsAppleAdeAdeTokenIdDevicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeAdeTokenIdGet', function() {
      it('should call apiV1IntegrationsAppleAdeAdeTokenIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeAdeTokenIdGet
        //instance.apiV1IntegrationsAppleAdeAdeTokenIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeAdeTokenIdPatch', function() {
      it('should call apiV1IntegrationsAppleAdeAdeTokenIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeAdeTokenIdPatch
        //instance.apiV1IntegrationsAppleAdeAdeTokenIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeAdeTokenIdRenewPost', function() {
      it('should call apiV1IntegrationsAppleAdeAdeTokenIdRenewPost successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeAdeTokenIdRenewPost
        //instance.apiV1IntegrationsAppleAdeAdeTokenIdRenewPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeDevicesDeviceIdGet', function() {
      it('should call apiV1IntegrationsAppleAdeDevicesDeviceIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeDevicesDeviceIdGet
        //instance.apiV1IntegrationsAppleAdeDevicesDeviceIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeDevicesDeviceIdPatch', function() {
      it('should call apiV1IntegrationsAppleAdeDevicesDeviceIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeDevicesDeviceIdPatch
        //instance.apiV1IntegrationsAppleAdeDevicesDeviceIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeDevicesGet', function() {
      it('should call apiV1IntegrationsAppleAdeDevicesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeDevicesGet
        //instance.apiV1IntegrationsAppleAdeDevicesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdeGet', function() {
      it('should call apiV1IntegrationsAppleAdeGet successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdeGet
        //instance.apiV1IntegrationsAppleAdeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdePost', function() {
      it('should call apiV1IntegrationsAppleAdePost successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdePost
        //instance.apiV1IntegrationsAppleAdePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1IntegrationsAppleAdePublicKeyGet', function() {
      it('should call apiV1IntegrationsAppleAdePublicKeyGet successfully', function(done) {
        //uncomment below and update the code to test apiV1IntegrationsAppleAdePublicKeyGet
        //instance.apiV1IntegrationsAppleAdePublicKeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomAppsGet', function() {
      it('should call apiV1LibraryCustomAppsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomAppsGet
        //instance.apiV1LibraryCustomAppsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomAppsLibraryItemIdDelete', function() {
      it('should call apiV1LibraryCustomAppsLibraryItemIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomAppsLibraryItemIdDelete
        //instance.apiV1LibraryCustomAppsLibraryItemIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomAppsLibraryItemIdGet', function() {
      it('should call apiV1LibraryCustomAppsLibraryItemIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomAppsLibraryItemIdGet
        //instance.apiV1LibraryCustomAppsLibraryItemIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomAppsLibraryItemIdPatch', function() {
      it('should call apiV1LibraryCustomAppsLibraryItemIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomAppsLibraryItemIdPatch
        //instance.apiV1LibraryCustomAppsLibraryItemIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomAppsPost', function() {
      it('should call apiV1LibraryCustomAppsPost successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomAppsPost
        //instance.apiV1LibraryCustomAppsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomAppsUploadPost', function() {
      it('should call apiV1LibraryCustomAppsUploadPost successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomAppsUploadPost
        //instance.apiV1LibraryCustomAppsUploadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomProfilesGet', function() {
      it('should call apiV1LibraryCustomProfilesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomProfilesGet
        //instance.apiV1LibraryCustomProfilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomProfilesLibraryItemIdDelete', function() {
      it('should call apiV1LibraryCustomProfilesLibraryItemIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomProfilesLibraryItemIdDelete
        //instance.apiV1LibraryCustomProfilesLibraryItemIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomProfilesLibraryItemIdGet', function() {
      it('should call apiV1LibraryCustomProfilesLibraryItemIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomProfilesLibraryItemIdGet
        //instance.apiV1LibraryCustomProfilesLibraryItemIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomProfilesLibraryItemIdPatch', function() {
      it('should call apiV1LibraryCustomProfilesLibraryItemIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomProfilesLibraryItemIdPatch
        //instance.apiV1LibraryCustomProfilesLibraryItemIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomProfilesPost', function() {
      it('should call apiV1LibraryCustomProfilesPost successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomProfilesPost
        //instance.apiV1LibraryCustomProfilesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomScriptsGet', function() {
      it('should call apiV1LibraryCustomScriptsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomScriptsGet
        //instance.apiV1LibraryCustomScriptsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomScriptsLibraryItemIdDelete', function() {
      it('should call apiV1LibraryCustomScriptsLibraryItemIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomScriptsLibraryItemIdDelete
        //instance.apiV1LibraryCustomScriptsLibraryItemIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomScriptsLibraryItemIdGet', function() {
      it('should call apiV1LibraryCustomScriptsLibraryItemIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomScriptsLibraryItemIdGet
        //instance.apiV1LibraryCustomScriptsLibraryItemIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomScriptsLibraryItemIdPatch', function() {
      it('should call apiV1LibraryCustomScriptsLibraryItemIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomScriptsLibraryItemIdPatch
        //instance.apiV1LibraryCustomScriptsLibraryItemIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryCustomScriptsPost', function() {
      it('should call apiV1LibraryCustomScriptsPost successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryCustomScriptsPost
        //instance.apiV1LibraryCustomScriptsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryLibraryItemsLibraryItemIdActivityGet', function() {
      it('should call apiV1LibraryLibraryItemsLibraryItemIdActivityGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryLibraryItemsLibraryItemIdActivityGet
        //instance.apiV1LibraryLibraryItemsLibraryItemIdActivityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1LibraryLibraryItemsLibraryItemIdStatusGet', function() {
      it('should call apiV1LibraryLibraryItemsLibraryItemIdStatusGet successfully', function(done) {
        //uncomment below and update the code to test apiV1LibraryLibraryItemsLibraryItemIdStatusGet
        //instance.apiV1LibraryLibraryItemsLibraryItemIdStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismActivationLockGet', function() {
      it('should call apiV1PrismActivationLockGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismActivationLockGet
        //instance.apiV1PrismActivationLockGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismApplicationFirewallGet', function() {
      it('should call apiV1PrismApplicationFirewallGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismApplicationFirewallGet
        //instance.apiV1PrismApplicationFirewallGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismAppsGet', function() {
      it('should call apiV1PrismAppsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismAppsGet
        //instance.apiV1PrismAppsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismCertificatesGet', function() {
      it('should call apiV1PrismCertificatesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismCertificatesGet
        //instance.apiV1PrismCertificatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismCountcategoryappsGet', function() {
      it('should call apiV1PrismCountcategoryappsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismCountcategoryappsGet
        //instance.apiV1PrismCountcategoryappsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismDesktopAndScreensaverGet', function() {
      it('should call apiV1PrismDesktopAndScreensaverGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismDesktopAndScreensaverGet
        //instance.apiV1PrismDesktopAndScreensaverGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismDeviceInformationGet', function() {
      it('should call apiV1PrismDeviceInformationGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismDeviceInformationGet
        //instance.apiV1PrismDeviceInformationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismExportExportIdGet', function() {
      it('should call apiV1PrismExportExportIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismExportExportIdGet
        //instance.apiV1PrismExportExportIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismExportPost', function() {
      it('should call apiV1PrismExportPost successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismExportPost
        //instance.apiV1PrismExportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismFilevaultGet', function() {
      it('should call apiV1PrismFilevaultGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismFilevaultGet
        //instance.apiV1PrismFilevaultGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismGatekeeperAndXprotectGet', function() {
      it('should call apiV1PrismGatekeeperAndXprotectGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismGatekeeperAndXprotectGet
        //instance.apiV1PrismGatekeeperAndXprotectGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismInstalledProfilesGet', function() {
      it('should call apiV1PrismInstalledProfilesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismInstalledProfilesGet
        //instance.apiV1PrismInstalledProfilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismKernelExtensionsGet', function() {
      it('should call apiV1PrismKernelExtensionsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismKernelExtensionsGet
        //instance.apiV1PrismKernelExtensionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismLaunchAgentsAndDaemonsGet', function() {
      it('should call apiV1PrismLaunchAgentsAndDaemonsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismLaunchAgentsAndDaemonsGet
        //instance.apiV1PrismLaunchAgentsAndDaemonsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismLocalUsersGet', function() {
      it('should call apiV1PrismLocalUsersGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismLocalUsersGet
        //instance.apiV1PrismLocalUsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismStartupSettingsGet', function() {
      it('should call apiV1PrismStartupSettingsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismStartupSettingsGet
        //instance.apiV1PrismStartupSettingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismSystemExtensionsGet', function() {
      it('should call apiV1PrismSystemExtensionsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismSystemExtensionsGet
        //instance.apiV1PrismSystemExtensionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1PrismTransparencyDatabaseGet', function() {
      it('should call apiV1PrismTransparencyDatabaseGet successfully', function(done) {
        //uncomment below and update the code to test apiV1PrismTransparencyDatabaseGet
        //instance.apiV1PrismTransparencyDatabaseGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1SelfServiceCategoriesGet', function() {
      it('should call apiV1SelfServiceCategoriesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1SelfServiceCategoriesGet
        //instance.apiV1SelfServiceCategoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1SettingsLicensingGet', function() {
      it('should call apiV1SettingsLicensingGet successfully', function(done) {
        //uncomment below and update the code to test apiV1SettingsLicensingGet
        //instance.apiV1SettingsLicensingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1TagsPost', function() {
      it('should call apiV1TagsPost successfully', function(done) {
        //uncomment below and update the code to test apiV1TagsPost
        //instance.apiV1TagsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1TagsTagIdDelete', function() {
      it('should call apiV1TagsTagIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1TagsTagIdDelete
        //instance.apiV1TagsTagIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1TagsTagIdPatch', function() {
      it('should call apiV1TagsTagIdPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1TagsTagIdPatch
        //instance.apiV1TagsTagIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1TagssearchaccuhiveGet', function() {
      it('should call apiV1TagssearchaccuhiveGet successfully', function(done) {
        //uncomment below and update the code to test apiV1TagssearchaccuhiveGet
        //instance.apiV1TagssearchaccuhiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1ThreatDetailsGet', function() {
      it('should call apiV1ThreatDetailsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1ThreatDetailsGet
        //instance.apiV1ThreatDetailsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1UsersGet', function() {
      it('should call apiV1UsersGet successfully', function(done) {
        //uncomment below and update the code to test apiV1UsersGet
        //instance.apiV1UsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1UsersUserIdGet', function() {
      it('should call apiV1UsersUserIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV1UsersUserIdGet
        //instance.apiV1UsersUserIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postUrlPost', function() {
      it('should call postUrlPost successfully', function(done) {
        //uncomment below and update the code to test postUrlPost
        //instance.postUrlPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
