openapi: 3.1.0
info:
  description: "<html><head></head><body><h1 id=\"welcome-to-the-kandji-api-documentation\"\
    >Welcome to the Kandji API Documentation</h1>\\n<p>You can find your API URL in\
    \ Settings &gt; Access. The API URL will follow the below formats.</p>\\n<ul>\\\
    n<li><p>US - <code>https://SubDomain.api.kandji.io</code></p>\\n</li>\\n<li><p>EU\
    \ - <code>https://SubDomain.api.eu.kandji.io</code></p>\\n</li>\\n</ul>\\n<p>For\
    \ information on how to obtain an API token, please refer to the following support\
    \ article.</p>\\n<p><a href=\"https://support.kandji.io/api\">https://support.kandji.io/api</a></p>\\\
    n<h4 id=\"rate-limit\">Rate Limit</h4>\\n<p>The Kandji API currently has an API\
    \ rate limit of 10,000 requests per hour per customer.</p>\\n<h4 id=\"request-methods\"\
    >Request Methods</h4>\\n<p>HTTP request methods supported by the Kandji API.</p>\\\
    n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\n<tr>\\\
    n<th>Method</th>\\n<th>Definition</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>GET</td>\\\
    n<td>The <code>GET</code> method requests a representation of the specified resource.</td>\\\
    n</tr>\\n<tr>\\n<td>POST</td>\\n<td>The <code>POST</code> method submits an entity\
    \ to the specified resource.</td>\\n</tr>\\n<tr>\\n<td>PATCH</td>\\n<td>The <code>PATCH</code>\
    \ method applies partial modifications to a resource.</td>\\n</tr>\\n<tr>\\n<td>DELETE</td>\\\
    n<td>The <code>DELETE</code> method deletes the specified resource.</td>\\n</tr>\\\
    n</tbody>\\n</table>\\n</div><h4 id=\"response-codes\">Response codes</h4>\\n<p>Not\
    \ all response codes apply to every endpoint.</p>\\n<div class=\"click-to-expand-wrapper\
    \ is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th>Code</th>\\n<th>Response</th>\\\
    n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>200</td>\\n<td>OK</td>\\n</tr>\\n<tr>\\\
    n<td>201</td>\\n<td>Created</td>\\n</tr>\\n<tr>\\n<td>204</td>\\n<td>No content</td>\\\
    n</tr>\\n<tr>\\n<td></td>\\n<td>Typical response when sending the DELETE method.</td>\\\
    n</tr>\\n<tr>\\n<td>400</td>\\n<td>Bad Request</td>\\n</tr>\\n<tr>\\n<td></td>\\\
    n<td>\"Command already running\" - The command may already be running in a <em>Pending</em>\
    \ state waiting on the device.</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"Command\
    \ is not allowed for current device\" - The command may not be compatible with\
    \ the target device.</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"JSON parse error\
    \ - Expecting ',' delimiter: line 3 column 2 (char 65)\"</td>\\n</tr>\\n<tr>\\\
    n<td>401</td>\\n<td>Unauthorized</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>This error\
    \ can occur if the token is incorrect, was revoked, or the token has expired.</td>\\\
    n</tr>\\n<tr>\\n<td>403</td>\\n<td>Forbidden</td>\\n</tr>\\n<tr>\\n<td></td>\\\
    n<td>The request was understood but cannot be authorized.</td>\\n</tr>\\n<tr>\\\
    n<td>404</td>\\n<td>Not found</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>Unable to\
    \ locate the resource in the Kandji tenant.</td>\\n</tr>\\n<tr>\\n<td>415</td>\\\
    n<td>Unsupported Media Type</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>The request\
    \ contains a media type which the server or resource does not support.</td>\\\
    n</tr>\\n<tr>\\n<td>500</td>\\n<td>Internal server error</td>\\n</tr>\\n<tr>\\\
    n<td>503</td>\\n<td>Service unavailable</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>This\
    \ error can occur if a file upload is still being processed via the custom apps\
    \ API.</td>\\n</tr>\\n</tbody>\\n</table>\\n</div><h4 id=\"data-structure\">Data\
    \ structure</h4>\\n<p>The API returns all structured responses in JSON schema\
    \ format.</p>\\n<h4 id=\"examples\">Examples</h4>\\n<p>Code examples using the\
    \ API can be found in the Kandji support <a href=\"https://github.com/kandji-inc/support/tree/main/api-tools\"\
    >GitHub</a>.</p>\\n</body></html>"
  title: Kandji API
  version: 1.0.0
servers:
- url: /
paths:
  /api/v1/integrations/apple/ade/public_key/:
    get:
      description: <p>This request returns the public key used to create an MDM server
        connection in Apple Business Manager.</p>\n<p>The encoded information needs
        to be saved to a file with the <code>.pem</code> format and then uploaded
        to ABM.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Download public key
      summary: Download ADE public key
  /api/v1/integrations/apple/ade/:
    post:
      description: "<p>This request will create a new ADE integration.</p>\\n<p>The\
        \ default <code>blueprint_id</code>, <code>phone</code> number, <code>email</code>\
        \ address, and MDM server token <code>file</code> downloaded from ABM are\
        \ required and must be sent in the request.</p>\\n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Create integration
      summary: Create ADE integration
  /api/v1/integrations/apple/ade/{ade_token_id}/renew:
    post:
      description: "<p>This request will renew an existing ADE integration.</p>\\\
        n<p>The default <code>blueprint_id</code>, <code>phone</code> number, <code>email</code>\
        \ address, and MDM server token <code>file</code> from the associated MDM\
        \ server in ABM are required and must be sent in the request.</p>\\n"
      parameters:
      - description: Path parameter 'ade_token_id'
        explode: false
        in: path
        name: ade_token_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Renew integration
      summary: Renew ADE integration
  /api/v1/integrations/apple/ade/{ade_token_id}:
    delete:
      description: "<h1 id=\"warning\"><strong>WARNING!</strong></h1>\\n<p>This is\
        \ a HIGHLY destructive action.</p>\\n<p>Deleting an ADE token will unassign\
        \ the associated device records from Kandji. For currently enrolled devices\
        \ that were assigned to Kandji via the delete ADE integration will not be\
        \ impacted until they are wiped and reprovisioned. This action is essentially\
        \ the same as removing an ADE token from MDM and then adding it back.</p>\\\
        n<p>If applicable, be sure to reassign the device records in ABM.</p>\\n"
      parameters:
      - description: Path parameter 'ade_token_id'
        explode: false
        in: path
        name: ade_token_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Delete integration
      summary: Delete ADE integration
    get:
      description: <p>This request returns a specific ADE integration based on the
        <code>ade_token_id</code> passed.</p>\n
      parameters:
      - description: Path parameter 'ade_token_id'
        explode: false
        in: path
        name: ade_token_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get integration
      summary: Get ADE integration
    patch:
      description: "<p>This request will update the default blueprint, phone number,\
        \ and email address in an existing ADE integration.</p>\\n<p>The default <code>blueprint_id</code>,\
        \ <code>phone</code> number, and <code>email</code> address must be sent in\
        \ the request.</p>\\n"
      parameters:
      - description: Path parameter 'ade_token_id'
        explode: false
        in: path
        name: ade_token_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Update integration
      summary: Update ADE integration
  /api/v1/integrations/apple/ade:
    get:
      description: <p>This request returns a list of configured ADE integrations.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: List integrations
      summary: List ADE integrations
  /api/v1/integrations/apple/ade/{ade_token_id}/devices:
    get:
      description: "<p>This request returns a list of devices associated with a specified\
        \ <code>ade_token_id</code> as well as their enrollment status.</p>\\n<p>When\
        \ the <code>mdm_device</code> key value is <code>null</code>, this can be\
        \ taken as an indication that the device is awaiting enrollment into Kandji.</p>\\\
        n<p>When data is present within the mdm_device dictionary, you can reference\
        \ the <code>device_id</code> as the ID of the enrolled device record.</p>\\\
        n"
      parameters:
      - description: Path parameter 'ade_token_id'
        explode: false
        in: path
        name: ade_token_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: List associated devices - null mdm_device
      summary: List devices associated to ADE token
  /api/v1/integrations/apple/ade/devices:
    get:
      description: <p>Get a list of Automated Device Enrollment devices.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Invalid UUID
      summary: List ADE devices
  /api/v1/integrations/apple/ade/devices/{device_id}:
    get:
      description: <p>Get information about a specific Automated Device Enrollment
        device.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get ADE device
    patch:
      description: "<p>Update a specific Automated Device Enrollment device's blueprint\
        \ assignment, user assignment, and asset tag.</p>\\n<h3 id=\"request-parameters\"\
        >Request Parameters</h3>\\n<p><code>device_id</code> (path parameter): The\
        \ unique identifier of the device.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Update user assignment
      summary: Update ADE device
  /api/v1/blueprints:
    get:
      description: <p>This request returns a list of a blueprint records in the Kandji
        tenant. Optional query parameters can be specified to filter the results.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Blueprints
    post:
      description: "<p>This request creates a new empty Blueprint or a new Blueprint\
        \ from a template. The keys <code>name</code> and <code>enrollment_code</code>\
        \ <code>is_active</code> are required, and the blueprint name key must be\
        \ unique from the existing blueprint names in the Kandji tenant.</p>\\n<p>optionally,\
        \ <code>type: map</code> can be used when creating a new Assignment Map blueprint.</p>\\\
        n<p>Note: If cloning an existing blueprint,`type` value and the type of sourced\
        \ (`source.id`) blueprint must match and `source.type` value must be set to\
        \ `blueprint`.</p>\\n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: 400 - type does not match source.id blueprint type
      summary: Create Blueprint
  /api/v1/blueprints/{blueprint_id}:
    delete:
      description: "<h1 id=\"warning\"><strong>WARNING!</strong></h1>\\n<p>This is\
        \ a HIGHLY destructive action.</p>\\n<p>Deleting a Blueprint will un-manage\
        \ ALL devices assigned to the Blueprint.</p>\\n<h3 id=\"request-parameters\"\
        >Request Parameters</h3>\\n<p><code>blueprint_id</code> (path parameter):\
        \ The unique identifier of the blueprint.</p>\\n"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Delete Blueprint
    get:
      description: "<p>This request returns information about a specific blueprint\
        \ based on blueprint ID.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>blueprint_id</code> (path parameter): The unique identifier of the\
        \ blueprint.</p>\\n"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Blueprint
    patch:
      description: "<p>This requests allows updating of the name, icon, icon color,\
        \ description, enrollment code, and active status on an existing blueprint.</p>\\\
        n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>blueprint_id</code>\
        \ (path parameter): The unique identifier of the blueprint.</p>\\n"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Update Blueprint
  /api/v1/blueprints/{blueprint_id}/ota-enrollment-profile:
    get:
      description: "<p>This request returns the manual enrollment profile (.mobileconfig\
        \ file) for a specified Blueprint.</p>\\n<p>This request will return the enrollment\
        \ profile even if \"Require Authentication\" is configured for the Blueprint\
        \ in Manual Enrollment.</p>\\n<p>The enrollment profile will be returned in\
        \ raw form with response headers:</p>\\n<ul>\\n<li><p><code>Content-Type</code>\
        \ = <code>application/x-apple-aspen-config</code></p>\\n</li>\\n<li><p><code>Content-Disposition</code>\
        \ = <code>attachment;filename=kandji-enroll.mobileconfig</code></p>\\n</li>\\\
        n</ul>\\n<p>An optional query parameter <code>sso=true</code> can be used\
        \ to return a URL for SSO authentication instead. If this query parameter\
        \ is used for a Blueprint that does not require authentication, then the enrollment\
        \ profile will be returned.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>blueprint_id</code> (path parameter): The unique identifier of the\
        \ blueprint.</p>\\n"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get Manual Enrollment Profile
      summary: Get Manual Enrollment Profile
  /api/v1/blueprints/{blueprint_id}/list-library-items:
    get:
      description: "<p>This API endpoint retrieves a list of library items associated\
        \ with a specific blueprint. (classic and maps). Requires that the blueprint\
        \ ID is passed as a path parameter in the URL.</p>\\n<h3 id=\"request-parameters\"\
        >Request Parameters</h3>\\n<p><code>blueprint_id</code> (path parameter):\
        \ The unique identifier of the blueprint.</p>\\n<h3 id=\"response-fields\"\
        >Response fields</h3>\\n<ul>\\n<li><p><code>count</code> (int): The total\
        \ count of library items.</p>\\n</li>\\n<li><p><code>next</code> (str): The\
        \ URL for the next page of results, if available. If not available will value\
        \ will be <code>null</code>.</p>\\n</li>\\n<li><p><code>previous</code> (str):\
        \ The URL for the previous page of results, if available. If not available\
        \ will value will be <code>null</code>.</p>\\n</li>\\n<li><p><code>results</code>\
        \ (object): An array containing objects with the following fields:</p>\\n<ul>\\\
        n<li><p><code>id</code> (str): The ID of the library item.</p>\\n</li>\\n<li><p><code>name</code>\
        \ (str): The name of the library item.</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\\\
        n"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Library Items
  /api/v1/blueprints/{blueprint_id}/assign-library-item:
    post:
      description: "<p>This endpoint allows assigning a library item to a specific\
        \ blueprint (classic and maps). The response will include a list of library\
        \ item IDs assigned to the blueprint.</p>\\n<h3 id=\"request-parameters\"\
        >Request Parameters</h3>\\n<p><code>blueprint_id</code> (path parameter):\
        \ The unique identifier of the blueprint.</p>\\n<h3 id=\"request-body\">Request\
        \ Body</h3>\\n<ul>\\n<li><p><code>library_item_id</code> (string, required)</p>\\\
        n</li>\\n<li><p><code>assignment_node_id</code> (string, required for maps)</p>\\\
        n<ul>\\n<li>Note: To find the assignment_node_id, view the map in a browser.\
        \ Then, on your keyboard, press and hold the Option ⌥ key. Each node ID remains\
        \ fixed for the lifespan of the node on the map.</li>\\n</ul>\\n</li>\\n</ul>\\\
        n<h3 id=\"error-responses\">Error responses</h3>\\n<div class=\"click-to-expand-wrapper\
        \ is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th><strong>Code</strong></th>\\\
        n<th><strong>Body</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>400\
        \ - Bad Request</td>\\n<td>Bad Request</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"\
        Library Item already exists on Blueprint\"</td>\\n</tr>\\n<tr>\\n<td></td>\\\
        n<td>\"Library Item already exists in Assignment Node\"</td>\\n</tr>\\n<tr>\\\
        n<td></td>\\n<td>\"assignment_node_id cannot be provided for Classic Blueprint\"\
        </td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"Must provide assignment_node_id for\
        \ Assignment Map Blueprint\"</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success - classic
      summary: Assign Library Item
  /api/v1/blueprints/{blueprint_id}/remove-library-item:
    post:
      description: "<p>This endpoint allows removing a library item from a specific\
        \ blueprint (classic and maps). The response will include a list of library\
        \ item IDs assigned to the blueprint.</p>\\n<h3 id=\"request-parameters\"\
        >Request Parameters</h3>\\n<p><code>blueprint_id</code> (path parameter):\
        \ The unique identifier of the blueprint.</p>\\n<h3 id=\"request-body\">Request\
        \ Body</h3>\\n<ul>\\n<li><p><code>library_item_id</code> (string, required)</p>\\\
        n</li>\\n<li><p><code>assignment_node_id</code> (string, required for maps)</p>\\\
        n</li>\\n</ul>\\n<h3 id=\"error-responses\">Error responses</h3>\\n<div class=\"\
        click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th><strong>Code</strong></th>\\\
        n<th><strong>Body</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>400\
        \ - Bad Request</td>\\n<td>Bad Request</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"\
        assignment_node_id cannot be provided for Classic Blueprint\"</td>\\n</tr>\\\
        n<tr>\\n<td></td>\\n<td>\"Must provide assignment_node_id for Assignment Map\
        \ Blueprint\"</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"Library Item does not\
        \ exist on Blueprint\"</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td>\"Library Item\
        \ does not exist in Assignment Node\"</td>\\n</tr>\\n</tbody>\\n</table>\\\
        n</div>"
      parameters:
      - description: Path parameter 'blueprint_id'
        explode: false
        in: path
        name: blueprint_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success - classic
      summary: Remove Library Item
  /api/v1/blueprints/templates/:
    get:
      description: ""
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Blueprint Templates
  /api/v1/devices/{device_id}/notes:
    get:
      description: <p>This request gets all notes for the specified Device ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get All Device Notes
      summary: Get Device Notes
    post:
      description: <p>This request creates a note for the specified device ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Create Device Note
      summary: Create Device Note
  /api/v1/devices/{device_id}/notes/{note_id}:
    delete:
      description: <p>This request deletes a specified note (Note ID) for the specified
        Device ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      - description: Path parameter 'note_id'
        explode: false
        in: path
        name: note_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Delete Device Note
      summary: Delete Device Note
    get:
      description: <p>This request retrieves a specified note (Note ID) for the specified
        Device ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      - description: Path parameter 'note_id'
        explode: false
        in: path
        name: note_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Retrieve Device Note
      summary: Retrieve Device Note
    patch:
      description: <p>This request patches a specified note (Note ID) for the specified
        Device ID.</p>\n
      parameters:
      - description: ""
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      - description: Path parameter 'note_id'
        explode: false
        in: path
        name: note_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Update Device Note
      summary: Update Device Note
  /api/v1/devices?limit=300:
    get:
      description: <p>This request returns a list of devices in a Kandji tenant. Optionally.
        query parameters can be used to filter results.</p>\n<p>There is a hard upper
        limit of 300 results per request. To return addtional results pagination must
        be used. Pagination examples can be found in the Kandji support <a href="https://github.com/kandji-inc/support/tree/main/api-tools/code-examples">GitHub</a>.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: List iPad only
      summary: List Devices
  /api/v1/devices/{device_id}:
    delete:
      description: "<p>This endpoint sends an MDM command to delete a device. This\
        \ will remove the device record from Kandji and send a Remove Management command.\
        \ For macOS devices, it will also send an uninstall command to the Kandji\
        \ Agent at the next agent checkin.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Delete Device
      summary: Delete Device
    get:
      description: <p>This request returns the high-level information for a specified
        Device ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get iPad
      summary: Get Device
    patch:
      description: "<p>This request allows you to update device information, such\
        \ as the assigned blueprint, user, Asset Tag, and Tags. It is not required\
        \ to use all attributes in a given request. For example if you only want to\
        \ update the assigned blueprint, you only need to pass the <code>blueprint_id</code>\
        \ in the request payload.</p>\\n<p><strong>NOTE</strong>: With the introduction\
        \ of a UUID value for user ID in the <a href=\"https://api-docs.kandji.io/#b107eb0a-b586-414f-bc4c-3d2b304cfd5f\"\
        >Users API</a>, the Device PATCH endpoint will support both the depricated\
        \ user ID integer value and the new user ID UUID value when updating the user\
        \ assignment for a device. The ability to update user assignment via the integer\
        \ ID value will be removed starting January 2025.</p>\\n<h3 id=\"request-parameters\"\
        >Request Parameters</h3>\\n<p><code>device_id</code> (path parameter): The\
        \ unique identifier of the device.</p>\\n<h3 id=\"additional-information\"\
        >Additional information</h3>\\n<p>User ID can be found using the <code>list\
        \ users</code> API</p>\\n<p>A Blueprint ID can be found using the <code>list\
        \ blueprints</code> API or in the URL path while on a Blueprint overview page.</p>\\\
        n<p>For example, for this URL <a href=\"https://subdomain.kandji.io/blueprints/6391086e-85a1-4820-813c-f9c75025fff4\"\
        >https://subdomain.kandji.io/blueprints/6391086e-85a1-4820-813c-f9c75025fff4</a></p>\\\
        n<p>The Blueprint ID would be <code>6391086e-85a1-4820-813c-f9c75025fff4</code></p>\\\
        n<p>An example script that leverages this API can be found in the <a href=\"\
        https://github.com/kandji-inc/support/tree/main/api-tools/update-device-record\"\
        >Kandji Support GitHub</a></p>\\n<h4 id=\"clearing-the-device-asset-tag\"\
        >Clearing the device asset tag</h4>\\n<p>To clear a device asset tag, set\
        \ the <code>asset_tag</code> value to <code>null</code> in the JSON payload.</p>\\\
        n<pre class=\"click-to-expand-wrapper is-snippet-wrapper\"><code class=\"\
        language-json\">{\\n    \"asset_tag\": null\\n}\\n\\n</code></pre>\\n<h4 id=\"\
        clearing-the-assigned-user-attribute\">Clearing the assigned user attribute</h4>\\\
        n<p>To clear the assigned user for a given device, set the <code>user</code>\
        \ value to <code>null</code> in the JSON payload.</p>\\n<pre class=\"click-to-expand-wrapper\
        \ is-snippet-wrapper\"><code class=\"language-json\">{\\n    \"user\": null\\\
        n}\\n\\n</code></pre>\\n<h4 id=\"clearing-all-tags\">Clearing all tags</h4>\\\
        n<p>To clear the assigned tags for a given device, set the <code>tags</code>\
        \ value to an empty list <code>[]</code> in the JSON payload.</p>\\n<pre class=\"\
        click-to-expand-wrapper is-snippet-wrapper\"><code class=\"language-json\"\
        >{\\n    \"tags\": []\\n}\\n\\n</code></pre>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Clear all tags
      summary: Update Device
  /api/v1/devices/{device_id}/details:
    get:
      description: <p>This request returns the device details for a specified Device
        ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: iPhone or iPad in Lost mode
      summary: Get Device Details
  /api/v1/devices/{device_id}/details/lostmode:
    delete:
      description: <p>This endpoint can be used to send a cancelation request if Lost
        Mode is in an error state for a given iOS or iPadOS device.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: Default response
      summary: Cancel Lost Mode
    get:
      description: "<p>This request returns the device lost mode details for a specified\
        \ Device ID.</p>\\n<p><strong>Note</strong>: Lost Mode is is only available\
        \ for iOS and iPadOS. For more information, please see this <a href=\"https://support.kandji.io/a/solutions/articles/72000573873\"\
        >Kandji support artilcle</a>.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Device not in lost mode
      summary: Get Device Lost Mode details
  /api/v1/devices/{device_id}/activity?limit=300:
    get:
      description: <p>This request returns the device activity for a specified Device
        ID.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get Device Activity
      summary: Get Device Activity
  /api/v1/devices/{device_id}/apps:
    get:
      description: "<p>This request returns a list of all installed apps for a specified\
        \ Device ID.</p>\\n<p>For iPhone and iPad, the preinstalled Apple apps are\
        \ not reported.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: iPad apps
      summary: Get Device Apps
  /api/v1/devices/{device_id}/library-items:
    get:
      description: "<p>This request gets all library items and their statuses for\
        \ a specified Device ID</p>\\n<h4 id=\"possible-library-item-status-values\"\
        >Possible library item status values</h4>\\n<div class=\"click-to-expand-wrapper\
        \ is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th><strong>Value</strong></th>\\\
        n<th><strong>Type</strong></th>\\n<th><strong>Additional Info</strong></th>\\\
        n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>AVAILABLE</td>\\n<td>string</td>\\\
        n<td>Library item available in Self Service</td>\\n</tr>\\n<tr>\\n<td>CACHED</td>\\\
        n<td>string</td>\\n<td>Library item downloaded for install but not yet installed</td>\\\
        n</tr>\\n<tr>\\n<td>CHANGE_PENDING</td>\\n<td>string</td>\\n<td>Recovery Password\
        \ library item has changes that have not yet been applied</td>\\n</tr>\\n<tr>\\\
        n<td>DOWNLOADING</td>\\n<td>string</td>\\n<td>Library item downloading</td>\\\
        n</tr>\\n<tr>\\n<td>ERROR</td>\\n<td>string</td>\\n<td>Audit failure</td>\\\
        n</tr>\\n<tr>\\n<td>EXCLUDED</td>\\n<td>string</td>\\n<td>Not in scope for\
        \ assignment rule</td>\\n</tr>\\n<tr>\\n<td>INCOMPATIBLE</td>\\n<td>string</td>\\\
        n<td>Not compatible with device or OS version</td>\\n</tr>\\n<tr>\\n<td>INSTALLING</td>\\\
        n<td>string</td>\\n<td>Library item installing</td>\\n</tr>\\n<tr>\\n<td>PASS</td>\\\
        n<td>string</td>\\n<td>Device meets requirements</td>\\n</tr>\\n<tr>\\n<td>PENDING</td>\\\
        n<td>string</td>\\n<td>Waiting on device, not yet installed (All library items\
        \ except for config profiles)</td>\\n</tr>\\n<tr>\\n<td>failed</td>\\n<td>string</td>\\\
        n<td>Configuration profile failed to install</td>\\n</tr>\\n<tr>\\n<td>pending</td>\\\
        n<td>string</td>\\n<td>Waiting on device, Configuration profile not yet installed</td>\\\
        n</tr>\\n<tr>\\n<td>success</td>\\n<td>string</td>\\n<td>Configuration profile\
        \ installed</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: edr status
      summary: Get Device Library Items
  /api/v1/devices/{device_id}/parameters:
    get:
      description: "<p>This request returns the parameters and their statuses for\
        \ a specified Device ID</p>\\n<p>This endpoint is only applicable to macOS\
        \ clients.</p>\\n<p>The parameters will be returned as a list of IDs. These\
        \ IDs can be correlated with the parameter names available here: <a href=\"\
        https://github.com/kandji-inc/support/wiki/Devices-API---Parameter-Correlations\"\
        >https://github.com/kandji-inc/support/wiki/Devices-API---Parameter-Correlations</a></p>\\\
        n<p><strong>Possible parameter status values</strong></p>\\n<div class=\"\
        click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th><strong>Value</strong></th>\\\
        n<th><strong>Type</strong></th>\\n<th><strong>Additional Info</strong></th>\\\
        n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>ERROR</td>\\n<td>string</td>\\n<td>Audit\
        \ failure</td>\\n</tr>\\n<tr>\\n<td>INCOMPATIBLE</td>\\n<td>string</td>\\\
        n<td>Not compatible with device or OS version</td>\\n</tr>\\n<tr>\\n<td>PASS</td>\\\
        n<td>string</td>\\n<td>Device meets requirements</td>\\n</tr>\\n<tr>\\n<td>PENDING</td>\\\
        n<td>string</td>\\n<td>Waiting on device. Not yet run.</td>\\n</tr>\\n<tr>\\\
        n<td>REMEDIATED</td>\\n<td>string</td>\\n<td>Parameter remediated</td>\\n</tr>\\\
        n<tr>\\n<td>WARNING</td>\\n<td>string</td>\\n<td>Muted alert</td>\\n</tr>\\\
        n</tbody>\\n</table>\\n</div>"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get Device Parameters
      summary: Get Device Parameters
  /api/v1/devices/{device_id}/status:
    get:
      description: "<p>This request returns the full status (parameters and library\
        \ items) for a specified Device ID.</p>\\n<p>The parameters will be returned\
        \ as a list of IDs. These IDs can be correlated with the parameter names available\
        \ here: <a href=\"https://github.com/kandji-inc/support/wiki/Devices-API---Parameter-Correlations\"\
        >https://github.com/kandji-inc/support/wiki/Devices-API---Parameter-Correlations</a></p>\\\
        n<h4 id=\"possible-status-values\">Possible status values</h4>\\n<p><strong>Library\
        \ items</strong></p>\\n<div class=\"click-to-expand-wrapper is-table-wrapper\"\
        ><table>\\n<thead>\\n<tr>\\n<th><strong>Value</strong></th>\\n<th><strong>Type</strong></th>\\\
        n<th><strong>Additional Info</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\\
        n<tr>\\n<td>AVAILABLE</td>\\n<td>string</td>\\n<td>Library item available\
        \ in Self Service</td>\\n</tr>\\n<tr>\\n<td>ERROR</td>\\n<td>string</td>\\\
        n<td>Audit failure</td>\\n</tr>\\n<tr>\\n<td>EXCLUDED</td>\\n<td>string</td>\\\
        n<td>Not in scope for assignment rule</td>\\n</tr>\\n<tr>\\n<td>INCOMPATIBLE</td>\\\
        n<td>string</td>\\n<td>Not compatible with device or OS version</td>\\n</tr>\\\
        n<tr>\\n<td>PASS</td>\\n<td>string</td>\\n<td>Device meets requirements</td>\\\
        n</tr>\\n<tr>\\n<td>PENDING</td>\\n<td>string</td>\\n<td>Waiting on device,\
        \ not yet installed (All library items except for config profiles)</td>\\\
        n</tr>\\n<tr>\\n<td>failed</td>\\n<td>string</td>\\n<td>Configuration profile\
        \ failed to install</td>\\n</tr>\\n<tr>\\n<td>pending</td>\\n<td>string</td>\\\
        n<td>Waiting on device, Configuration profile not yet installed</td>\\n</tr>\\\
        n<tr>\\n<td>success</td>\\n<td>string</td>\\n<td>Configuration profile installed</td>\\\
        n</tr>\\n</tbody>\\n</table>\\n</div><p><strong>Parameters</strong></p>\\\
        n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\\
        n<tr>\\n<th><strong>Value</strong></th>\\n<th><strong>Type</strong></th>\\\
        n<th><strong>Additional Info</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\\
        n<tr>\\n<td>ERROR</td>\\n<td>string</td>\\n<td>Audit failure</td>\\n</tr>\\\
        n<tr>\\n<td>INCOMPATIBLE</td>\\n<td>string</td>\\n<td>Not compatible with\
        \ device or OS version</td>\\n</tr>\\n<tr>\\n<td>PASS</td>\\n<td>string</td>\\\
        n<td>Device meets requirements</td>\\n</tr>\\n<tr>\\n<td>PENDING</td>\\n<td>string</td>\\\
        n<td>Waiting on device. Not yet run.</td>\\n</tr>\\n<tr>\\n<td>REMEDIATED</td>\\\
        n<td>string</td>\\n<td>Parameter remediated</td>\\n</tr>\\n<tr>\\n<td>WARNING</td>\\\
        n<td>string</td>\\n<td>Muted alert</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get Device Status
      summary: Get Device Status
  /api/v1/devices/{device_id}/action/enablelostmode:
    post:
      description: "<p>This endpoint sends an MDM command to remotely turn on lost\
        \ mode on iOS and iPadOS.</p>\\n<p>Optionally, a JSON payload can be sent\
        \ in the request to set a lock message, phone number, and footnote on the\
        \ target device.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Enable Lost Mode
      summary: Enable Lost Mode
  /api/v1/devices/{device_id}/action/disablelostmode:
    post:
      description: "<p>This command will send a request to turn off lost mode on iOS\
        \ and iPadOS.</p>\\n<p>If the command is already pending, the message \"<em>Disable\
        \ lost mode is already pending for this device.</em>\" will be in the response.</p>\\\
        n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Disable Lost Mode
      summary: Disable Lost Mode
  /api/v1/devices/{device_id}/action/playlostmodesound:
    post:
      description: "<p>This command will tell the target iOS or iPadOS device to play\
        \ the lost mode sound.</p>\\n<p><strong>Note</strong>: The Lost Mode sound\
        \ will play for 2 minutes, even if the device is in silent mode. Anyone finding\
        \ the device can silence the sound by pressing any of its side buttons.</p>\\\
        n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Play Lost Mode Sound
      summary: Play Lost Mode Sound
  /api/v1/devices/{device_id}/action/updatelocation:
    post:
      description: <p>This endpoint sends an MDM command to update the location data
        on iOS and iPadOS.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Update Location
      summary: Update Location
  /api/v1/devices/{device_id}/action/clearpasscode:
    post:
      description: <p>This endpoint sends an MDM command to clear a device passcode.
        Available for iPhone and iPad.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Clear Passcode
      summary: Clear Passcode
  /api/v1/devices/{device_id}/action/deleteuser:
    post:
      description: "<p>This endpoint sends an MDM command to delete a local user account\
        \ on macOS and Shared iPad (Device Supervision via Automated Device Enrollment\
        \ is required).</p>\\n<p><strong>Request Body Parameters</strong>: application/json</p>\\\
        n<hr />\\n<p><code>DeleteAllUsers</code> - <code>boolean</code></p>\\n<p><code>ForceDeletion</code>\
        \ - <code>boolean</code></p>\\n<p><code>UserName</code> - <code>string</code></p>\\\
        n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Delete User
      summary: Delete User
  /api/v1/devices/{device_id}/action/erase:
    post:
      description: "<p>This endpoint sends an MDM command to erase the device.</p>\\\
        n<p>iOS 4.0+, iPadOS 4.0+, macOS 10.7+, tvOS 10.2+</p>\\n<p><strong>Request\
        \ Body Parameters: application/json</strong></p>\\n<div class=\"click-to-expand-wrapper\
        \ is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th>Key</th>\\n<th>Type</th>\\\
        n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>PIN</code></td>\\\
        n<td><code>string</code></td>\\n<td>The six-character PIN for Find My. This\
        \ value is available in macOS 10.8 and later.</td>\\n</tr>\\n<tr>\\n<td><code>PreserveDataPlan</code></td>\\\
        n<td><code>boolean</code></td>\\n<td>If true, preserve the data plan on an\
        \ iPhone or iPad with eSIM functionality, if one exists. This value is available\
        \ in iOS 11 and later.  <br />  <br />Default: true</td>\\n</tr>\\n<tr>\\\
        n<td><code>DisallowProximitySetup</code></td>\\n<td><code>boolean</code></td>\\\
        n<td>If true, disable Proximity Setup on the next reboot and skip the pane\
        \ in Setup Assistant. This value is available in iOS 11 and later. Prior to\
        \ iOS 14, don’t use this option with any other option.  <br />  <br />Default:\
        \ false</td>\\n</tr>\\n<tr>\\n<td><code>ReturnToService</code></td>\\n<td><code>object</code></td>\\\
        n<td>(iOS 17 and later and iPadOS 17 and later and with Shared iPad ) When\
        \ sending the erase device command to mobile devices, use this key to enable\
        \ Return to Service. Include an optional Wi-Fi payload ProfileId to allow\
        \ the device to connect to a Wi-Fi network automatically after being erased.\
        \ If a Wi-Fi ProfileId is not provided and the mobile device is not tethered\
        \ to a Mac to share the network connection, the end-user will be required\
        \ to select a Wi-Fi network to complete the setup.  <br />  <br />If sent\
        \ to any macOS computer or to mobile devices on iOS 16 or iPadOS 16 and below,\
        \ the RTS keys will be ignored, and only the erase device command will be\
        \ issued to the device.</td>\\n</tr>\\n<tr>\\n<td>- <code>Enabled</code></td>\\\
        n<td><code>boolean</code></td>\\n<td>(Required) If true, the device tries\
        \ to re-enroll itself automatically after erasure. The user needs to deactivate\
        \ all activation locks for this feature to work correctly.</td>\\n</tr>\\\
        n<tr>\\n<td>- <code>ProfileId</code></td>\\n<td><code>string</code></td>\\\
        n<td>Profile ID value associated with a Wi-Fi profile payload. This is required\
        \ when the device doesn’t have ethernet access.</td>\\n</tr>\\n</tbody>\\\
        n</table>\\n</div>"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: RTS - Profile not in scope
      summary: Erase Device
  /api/v1/devices/{device_id}/commands?limit=300:
    get:
      description: "<p>This endpoint sends a request to get information about the\
        \ commands sent to a given device ID.</p>\\n<h3 id=\"mdm-status-codes\">MDM\
        \ Status Codes</h3>\\n<ul>\\n<li>1 : Command is Pending</li>\\n<li>2 : Command\
        \ is running</li>\\n<li>3 : Command completed</li>\\n<li>4 : Command failed</li>\\\
        n<li>5 : Command received \"Not Now\" response</li>\\n</ul>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get Device Commands
      summary: Get Device Commands
  /api/v1/devices/{device_id}/action/lock:
    post:
      description: "<p>This endpoint sends an MDM command to remotely lock a device.</p>\\\
        n<p>For macOS clients, an unlock PIN will be created, and returned in the\
        \ response.</p>\\n<blockquote>\\n<p><strong>Caution !!!</strong><br /><em>For\
        \ a Mac with Apple silicon running a version of macOS before 11.5 will deactivate\
        \ the Mac. To reactivate, the Mac requires a network connection and authentication\
        \ by a Secure Token enabled local administrator.</em></p>\\n</blockquote>\\\
        n<p>Optionally, a JSON payload can be sent in the request to set a lock message\
        \ and phone number on the target device.</p>\\n<p><strong>Note:</strong> For\
        \ macOS, although the lock message is displayed on all types of Mac computers,\
        \ the phone number is displayed only on a Mac with Apple silicon.</p>\\n<h4\
        \ id=\"response-properties\">Response properties</h4>\\n<div class=\"click-to-expand-wrapper\
        \ is-table-wrapper\"><table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\\
        n<th>Type</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>PIN</td>\\n<td>Six\
        \ digit pin code used to unlock a Mac.</td>\\n<td>String</td>\\n</tr>\\n</tbody>\\\
        n</table>\\n</div>"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Device already locked
      summary: Lock Device
  /api/v1/devices/{device_id}/action/reinstallagent:
    post:
      description: <p>This endpoint sends an MDM command reinstall the Kandji Agent.
        Available for macOS devices.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Reinstall Agent
      summary: Reinstall Agent
  /api/v1/devices/{device_id}/action/remotedesktop:
    post:
      description: "<p>This endpoint sends an MDM command to control the Remote Management\
        \ status on a Mac. This MDM command turns on (or turns off) Remote Management\
        \ with <em>Observe</em> and <em>Control</em> permissions given to all users*.*</p>\\\
        n<p><strong>Request Body Parameters</strong>: application/json</p>\\n<hr />\\\
        n<p><code>EnableRemoteDesktop</code> - <code>boolean</code></p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Turn off Remote Desktop
      summary: Remote Desktop
  /api/v1/devices/{device_id}/action/renewmdmprofile:
    post:
      description: "<p>This endpoint sends an MDM command to re-install the existing\
        \ root MDM profile for a given device ID. This command will not impact any\
        \ existing configurations, apps, or profiles.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Renew MDM Profile
      summary: Renew MDM Profile
  /api/v1/devices/{device_id}/action/restart:
    post:
      description: "<p>This endpoint sends an MDM command to remotely restart a device.</p>\\\
        n<ul>\\n<li><p><code>RebuildKernelCache</code> - If <code>true</code>, the\
        \ system rebuilds the kernel cache during a device restart. If <code>BootstrapTokenAllowedForAuthentication</code>\
        \ is <code>true</code> inSecurityInfoResponse.SecurityInfo, the device requests\
        \ the bootstrap token from MDM before executing this command. This value is\
        \ available in macOS 11 and later. Default: false</p>\\n</li>\\n<li><p><code>NotifyUser</code>\
        \ - If <code>true</code>, notifies the user to restart the device at their\
        \ convenience. Forced restart if the device is at <code>loginwindow</code>\
        \ with no logged-in users. The user can dismiss the notification and ignore\
        \ the request. No further notifications display unless you resend the command.\
        \ This value is available in macOS 11.3 and later. Default: false</p>\\n</li>\\\
        n</ul>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Restart Device
      summary: Restart Device
  /api/v1/devices/{device_id}/action/blankpush:
    post:
      description: <p>This endpoint sends an MDM command to initiate a blank push.</p>\n<p><a
        href="https://support.kandji.io/what-is-a-blank-push">Using the Blank Push
        command</a></p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Send Blankpush
      summary: Send Blankpush
  /api/v1/devices/{device_id}/action/setname:
    post:
      description: "<p>This endpoint sends an MDM command to set the device name.</p>\\\
        n<p><strong>Request Body Parameters</strong>: application/json</p>\\n<hr />\\\
        n<p><code>DeviceName</code> - <code>string</code></p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Set Name
      summary: Set Name
  /api/v1/devices/{device_id}/action/shutdown:
    post:
      description: <p>This endpoint sends an MDM command to shutdown a device.</p>\n
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Shutdown
      summary: Shutdown
  /api/v1/devices/{device_id}/action/updateinventory:
    post:
      description: "<p>This endpoint sends an MDM command to start a check-in for\
        \ a device, initiating the daily MDM commands and MDM logic.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Update Inventory
      summary: Update Inventory
  /api/v1/devices/{device_id}/action/unlockaccount:
    post:
      description: "<p>This endpoint sends an MDM command to unlock a user account\
        \ that locked by the system because of too many failed password attempts.\
        \ Available for macOS.</p>\\n<p><strong>Request Body Parameters</strong>:\
        \ application/json</p>\\n<hr />\\n<p><code>UserName</code> - <code>string</code></p>\\\
        n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Unlock Account
      summary: Unlock Account
  /api/v1/devices/{device_id}/secrets/bypasscode:
    get:
      description: "<p>This request allows you to retrieve the Activation Lock Bypass\
        \ code.</p>\\n<p>user_based_albc is the user-based Activation Lock bypass\
        \ code for when Activation Lock is enabled using an personal Apple ID and\
        \ Find My.</p>\\n<p>device_based_albc is the device-based Activation Lock\
        \ bypass code for when Activation Lock is enabled by the MDM server.</p>\\\
        n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>device_id</code>\
        \ (path parameter): The unique identifier of the device.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Activation Lock Bypass Code
  /api/v1/devices/{device_id}/secrets/filevaultkey:
    get:
      description: "<p>This request allows you to retrieve the FileVault Recovery\
        \ key for a macOS device.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>device_id</code> (path parameter): The unique identifier of the\
        \ device.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get FileVault Recovery Key
  /api/v1/devices/{device_id}/secrets/unlockpin:
    get:
      description: "<p>This request allows you to retrieve the device unlock pin for\
        \ a macOS device.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>device_id</code> (path parameter): The unique identifier of the\
        \ device.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Unlock Pin
  /api/v1/devices/{device_id}/secrets/recoverypassword:
    get:
      description: "<p>This request returns the Recovery Lock password for a Mac with\
        \ an Apple Silicon processor and the legacy EFI firmware password for a Mac\
        \ with an Intel processor.</p>\\n<p>For more details on setting and managing\
        \ Recovery passwords, see this <a href=\"https://support.kandji.io/support/solutions/articles/72000560472-configure-the-recovery-password-library-item\"\
        >Kandji support article</a>.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>device_id</code> (path parameter): The unique identifier of the\
        \ device.</p>\\n"
      parameters:
      - description: Path parameter 'device_id'
        explode: false
        in: path
        name: device_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Recovery Lock Password
  /api/v1/library/custom-apps:
    get:
      description: <p>This endpoint makes a request to retrieve a list of custom apps
        from the Kandji library.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Custom Apps
    post:
      description: <p>This request allows you to create a custom app in the Kandji
        library.</p>\n<p>Must have already generated a <code>file_key</code> via <code>Create
        custom app</code> endpoint and uploaded the file to S3 using a request similar
        to the <code>Upload to S3</code> example.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Create Custom App
  /api/v1/library/custom-apps/{library_item_id}:
    delete:
      description: "<p>NOTICE: This is permanent so be careful.</p>\\n<p>This endpoint\
        \ sends a request to delete a specific custom app from the Kandji library.</p>\\\
        n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>library_item_id</code>\
        \ (path parameter): The unique identifier of the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: requested library item not found
      summary: Delete Custom App
    get:
      description: "<p>This endpoint retrieves details about a specific custom app\
        \ from the Kandji library.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>library_item_id</code> (path parameter): The unique identifier of\
        \ the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Custom App
    patch:
      description: "<p>This request allows you to update a custom app in the Kandji\
        \ library.</p>\\n<p>Must have already generated a <code>file_key</code> via\
        \ <code>Create custom app</code> endpoint and uploaded the file to S3 using\
        \ a request similar to the <code>Upload to S3</code> example.</p>\\n<h3 id=\"\
        request-parameters\">Request Parameters</h3>\\n<p><code>library_item_id</code>\
        \ (path parameter): The unique identifier of the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Update Custom App
  /api/v1/library/custom-apps/upload:
    post:
      description: <p>This request retrieves the S3 upload details need for uploading
        the app to Amazon S3.</p>\n<p>Creates a pre-signed <code>post_url</code> to
        upload a new Custom App to S3.</p>\n<p>The provided <code>name</code> will
        be used to calculate a unique <code>file_key</code> in S3.</p>\n<p>A separate
        request will have to be made to the <code>Upload to S3</code> endpoint to
        upload the file to S3 directly using the <code>post_url</code> and <code>post_data</code>
        from the <code>Upload Custom App</code> response.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success - create s3 upload
      summary: Upload Custom App
  /{post_url}:
    post:
      description: "<p>Example showing separate post request to upload the file to\
        \ Amazon S3.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>post_url</code> (path parameter): The <code>post_url</code> value\
        \ from the <code>Upload custom app</code> response.</p>\\n<h3 id=\"request-body\"\
        >Request Body</h3>\\n<p>For the request body, use the contents of the <code>post_data</code>\
        \ object in the <code>Upload Custom App</code> endpoint response (example\
        \ response below) and supply the path to the custom app file in the <code>file</code>\
        \ request parameter.</p>\\n<h4 id=\"example-post_data-object\">Example post_data\
        \ object</h4>\\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper\"\
        ><code class=\"language-json\">\"post_data\": {\\n   \"key\": \"(field to\
        \ post along with file to S3 -- the key for the uploaded file)\",\\n   \"\
        x-amz-algorithm\": \"(field to post along with file to S3)\",\\n   \"x-amz-credential\"\
        : \"(field to post along with file to S3)\",\\n   \"x-amz-date\": \"(field\
        \ to post along with file to S3)\",\\n   \"x-amz-security-token\": \"(field\
        \ to post along with file to S3)\",\\n   \"policy\": \"(field to post along\
        \ with file to S3)\",\\n   \"x-amz-signature\": \"(field to post along with\
        \ file to S3)\",\\n}\\n\\n</code></pre>\\n"
      parameters:
      - description: Path parameter 'post_url'
        explode: false
        in: path
        name: post_url
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Upload to S3
  /api/v1/library/custom-profiles:
    get:
      description: <p>This endpoint makes a request to retrieve a list of custom profiles
        from the Kandji library.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Custom Profiles
    post:
      description: <p>This request allows you to create a custom profile in the Kandji
        library.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Create Custom Profile
  /api/v1/library/custom-profiles/{library_item_id}:
    delete:
      description: "<p>NOTICE: This is permanent so be careful.</p>\\n<p>This endpoint\
        \ sends a request to delete a specific custom profile from the Kandji library.</p>\\\
        n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>library_item_id</code>\
        \ (path parameter): The unique identifier of the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: requested library item not found
      summary: Delete Custom Profile
    get:
      description: "<p>This endpoint retrieves details about a specific custom app\
        \ from the Kandji library.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>library_item_id</code> (path parameter): The unique identifier of\
        \ the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Custom Profile
    patch:
      description: "<p>This request allows you to update a custom profile in the Kandji\
        \ library.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>library_item_id</code>\
        \ (path parameter): The unique identifier of the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Update Custom Profile
  /api/v1/library/custom-scripts:
    get:
      description: <p>This endpoint makes a request to retrieve a list of custom scripts
        from the Kandji library.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Custom Scripts
    post:
      description: <p>This request allows you to create a custom script in the Kandji
        library.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Create Custom Script
  /api/v1/library/custom-scripts/{library_item_id}:
    delete:
      description: "<p>NOTICE: This is permanent so be careful.</p>\\n<p>This endpoint\
        \ sends a request to delete a specific custom scripts from the Kandji library.</p>\\\
        n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>library_item_id</code>\
        \ (path parameter): The unique identifier of the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: requested library item not found
      summary: Delete Custom Script
    get:
      description: "<p>This endpoint retrieves details about a specific custom script\
        \ from the Kandji library.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>library_item_id</code> (path parameter): The unique identifier of\
        \ the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Custom Script
    patch:
      description: <p>This request allows you to update a custom script in the Kandji
        library.</p>\n
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success - zsh example
      summary: Update Custom Script
  /api/v1/self-service/categories:
    get:
      description: "<p>This endpoint retrieves a list of self-service categories and\
        \ their associated IDs.</p>\\n<p>If you are planning to make a Library item\
        \ available in Self Service under a specific category, you can call this endpoint\
        \ to get the category ID and then use that ID when creating or updating the\
        \ library item via the Kandji API.</p>\\n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Self Service Categories
  /api/v1/library/library-items/{library_item_id}/activity:
    get:
      description: "<p>This endpoint retrieves the activity related to a specific\
        \ library item. Activity is listed from newest to oldest.</p>\\n<p>To see\
        \ a delta of the activity events between now and the last request, you can\
        \ store the newest entry from the previous request and then look for that\
        \ entry in the next request. Any entry post that will be the delta.</p>\\\
        n<h3 id=\"request-parameters\">Request Parameters</h3>\\n<p><code>library_item_id</code>\
        \ (path parameter): The unique identifier of the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Library Item Activity
  /api/v1/library/library-items/{library_item_id}/status:
    get:
      description: "<p>This endpoint retrieves the statuses related to a specific\
        \ library item.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>library_item_id</code> (path parameter): The unique identifier of\
        \ the library item.</p>\\n"
      parameters:
      - description: Path parameter 'library_item_id'
        explode: false
        in: path
        name: library_item_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: edr status
      summary: Get Library Item Statuses
  /api/v1/prism/activation_lock:
    get:
      description: <p>Get activation lock attributes for devices.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Activation lock
  /api/v1/prism/apps:
    get:
      description: "<p>Get the applications installed on macOS, iOS, iPadOS, and tvOS\
        \ devices.</p>\\n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Applications
  /api/v1/prism/application_firewall:
    get:
      description: <p>Get Application Firewall details for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Application firewall
  /api/v1/prism/certificates:
    get:
      description: <p>Get certificate details.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Certificates
  /api/v1/prism/desktop_and_screensaver:
    get:
      description: <p>Get Desktop and Screensaver details for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Desktop and Screensaver
  /api/v1/prism/device_information:
    get:
      description: <p>Get attributes about devices.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Get devices in a blueprint sorted by serial number
      summary: Device information
  /api/v1/prism/filevault:
    get:
      description: <p>Get FileVault information for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: FileVault
  /api/v1/prism/gatekeeper_and_xprotect:
    get:
      description: <p>Get Gatekeeper and XProtect attributes for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Gatekeeper and XProtect
  /api/v1/prism/installed_profiles:
    get:
      description: "<p>Get Installed Profiles attributes for macOS, iOS, iPadOS, and\
        \ tvOS.</p>\\n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Installed profiles
  /api/v1/prism/kernel_extensions:
    get:
      description: <p>Get Kernel Extension attributes for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success - no kernel extensions
      summary: Kernel Extensions
  /api/v1/prism/launch_agents_and_daemons:
    get:
      description: <p>Get Launch Agents and Daemons installed on macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Launch Agents and Daemons
  /api/v1/prism/local_users:
    get:
      description: <p>Get Local Users detials for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Local users
  /api/v1/prism/startup_settings:
    get:
      description: <p>Get Startup settings for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Startup settings
      summary: Startup settings
  /api/v1/prism/system_extensions:
    get:
      description: <p>Get System Extension attributes for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: System Extensions
      summary: System Extensions
  /api/v1/prism/transparency_database:
    get:
      description: <p>Get Transparency Database (TCC) attributes for macOS.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Transparency database
      summary: Transparency database
  /api/v1/prism/export:
    post:
      description: "<p>Request export of a category. The <code>id</code> key is used\
        \ when checking the export status using the <em>Request category export</em>\
        \ endpoint.</p>\\n<p><strong>Request Body Parameters: application/json</strong></p>\\\
        n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\\n<thead>\\\
        n<tr>\\n<th>Key</th>\\n<th>Type</th>\\n<th>Possible value(s)</th>\\n<th>Description</th>\\\
        n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>blueprint_ids</code></td>\\\
        n<td><code>array</code></td>\\n<td><code>[\"string\", \"string\", \"string\"\
        ]</code></td>\\n<td>List of one or more comma separate blueprint IDs.</td>\\\
        n</tr>\\n<tr>\\n<td><code>category</code></td>\\n<td><code>string</code></td>\\\
        n<td><code>apps</code> ,  <br /><code>activation_lock</code> ,  <br /><code>desktop_and_screensaver</code>\
        \ ,  <br /><code>device_information</code> ,  <br /><code>gatekeeper_and_xprotect</code>\
        \ ,  <br /><code>installed_profiles</code> ,  <br /><code>kernel_extensions</code>\
        \ ,  <br /><code>local_users</code> ,  <br /><code>launch_agents_and_daemons</code>\
        \ ,  <br /><code>system_extensions</code> ,  <br /><code>startup_settings</code>\
        \ ,  <br /><code>transparency_database</code></td>\\n<td>Only one category\
        \ per export reqest.</td>\\n</tr>\\n<tr>\\n<td><code>device_families</code></td>\\\
        n<td><code>array</code></td>\\n<td><code>[\"Mac\", \"iPhone\", \"iPad\", \"\
        tvOS\"]</code></td>\\n<td>List of one or more comma separted string values\
        \ for device families.</td>\\n</tr>\\n<tr>\\n<td><code>filter</code></td>\\\
        n<td><code>object</code></td>\\n<td><code>{\"apple_silicon\": {\"eq\": true},\
        \ \"device__name\": {\"like\": [\"this\", \"or_this\"]}}</code></td>\\n<td>JSON\
        \ schema object containing one or more key value pairs.  <br />  <br /><strong>Note</strong>:\
        \ For detailed information on fiters, see the Filters section at the begining\
        \ of the Visibility API endpoints in this doc.</td>\\n</tr>\\n<tr>\\n<td><code>sort_by</code></td>\\\
        n<td><code>string</code></td>\\n<td></td>\\n<td>Sort results by the name of\
        \ a given response body key in either ascending (default behavior) or descending(`-`)\
        \ order.</td>\\n</tr>\\n</tbody>\\n</table>\\n</div>"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Bad category request
      summary: Request category export
  /api/v1/prism/export/{export_id}:
    get:
      description: "<p>Get an export request's status. To download the export, use\
        \ the <code>signed_url</code>. This will download a CSV file containing the\
        \ exported category information.</p>\\n<h3 id=\"request-parameters\">Request\
        \ Parameters</h3>\\n<p>export_id (path parameter): The unique identifier of\
        \ the the export job.</p>\\n"
      parameters:
      - description: Path parameter 'export_id'
        explode: false
        in: path
        name: export_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Example export status check
      summary: Get category export
  /api/v1/prism/count?category=apps:
    get:
      description: "<p>Get the total record count for the specified Prism category.</p>\\\
        n<p>If a category contains spaces substitute the spaces for underscores (\"\
        _\") when using the API query.</p>\\n<p>Example: <code>Device information</code>\
        \ becomes <code>device_information</code>.</p>\\n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Count
  /api/v1/tags?search=accuhive:
    get:
      description: <p>Return configured tags.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get Tags
  /api/v1/tags:
    post:
      description: <p>Create a tag. Can only create one tag per request.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Create Tag
  /api/v1/tags/{tag_id}:
    delete:
      description: "<p>Delete a tag.</p>\\n<h3 id=\"request-parameters\">Request Parameters</h3>\\\
        n<p><code>tag_id</code> (path parameter): The unique identifier of the tag.</p>\\\
        n"
      parameters:
      - description: Path parameter 'tag_id'
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Delete Tag
    patch:
      description: "<p>Update tag name.</p>\\n<h3 id=\"request-parameters\">Request\
        \ Parameters</h3>\\n<p><code>tag_id</code> (path parameter): The unique identifier\
        \ of the tag.</p>\\n"
      parameters:
      - description: Path parameter 'tag_id'
        explode: false
        in: path
        name: tag_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Update Tag
  /api/v1/threat-details:
    get:
      description: <p>Get threat details.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: using term param
      summary: Get Threat Details
  /api/v1/users:
    get:
      description: "<p>This endpoint makes a request to retrieve a list of users from\
        \ user directory integrations.</p>\\n<p>A maximum of 300 records are returned\
        \ per request, and pagination can be performed leveraging the URLs provided\
        \ in the <code>next</code> and <code>previous</code> keys in the response.\
        \ If there are no more results available, the respective key will be <code>null</code>.</p>\\\
        n"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: List Users
  /api/v1/users/{user_id}:
    get:
      description: "<p>This endpoint makes a request to retrieve a specified user\
        \ directory integration user by id.</p>\\n<h3 id=\"request-parameters\">Request\
        \ Parameters</h3>\\n<p>user_id (path parameter): The unique identifier of\
        \ the user directory integration user.</p>\\n"
      parameters:
      - description: Path parameter 'user_id'
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Get User
  /api/v1/settings/licensing:
    get:
      description: <p>Returns Kandji tenant licensing and utilization information.</p>\n
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: success
      summary: Licensing
components:
  schemas: {}
