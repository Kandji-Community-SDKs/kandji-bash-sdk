#  completion                               -*- shell-script -*-

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !
# ! Note:
# !
# ! THIS SCRIPT HAS BEEN AUTOMATICALLY GENERATED USING
# ! openapi-generator (https://openapi-generator.tech)
# ! FROM OPENAPI SPECIFICATION IN JSON.
# !
# ! Generator version: 7.10.0-SNAPSHOT
# !
# !
# ! System wide installation:
# !
# ! $ sudo cp .bash-completion /etc/bash-completion.d/
# !
# !
# ! User home installation (add this line to .bash_profile):
# !
# ! [ -r ~/.bash-completion ] && source ~/.bash-completion
# !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

declare -A mime_type_abbreviations
# text/*
mime_type_abbreviations["text"]="text/plain"
mime_type_abbreviations["html"]="text/html"
mime_type_abbreviations["md"]="text/x-markdown"
mime_type_abbreviations["csv"]="text/csv"
mime_type_abbreviations["css"]="text/css"
mime_type_abbreviations["rtf"]="text/rtf"
# application/*
mime_type_abbreviations["json"]="application/json"
mime_type_abbreviations["xml"]="application/xml"
mime_type_abbreviations["yaml"]="application/yaml"
mime_type_abbreviations["js"]="application/javascript"
mime_type_abbreviations["bin"]="application/octet-stream"
mime_type_abbreviations["rdf"]="application/rdf+xml"
# image/*
mime_type_abbreviations["jpg"]="image/jpeg"
mime_type_abbreviations["png"]="image/png"
mime_type_abbreviations["gif"]="image/gif"
mime_type_abbreviations["bmp"]="image/bmp"
mime_type_abbreviations["tiff"]="image/tiff"


#
# Check if this is OSX, if so defined custom init_completion
#
if [[ `uname` =~ "Darwin" ]]; then
    __osx_init_completion()
    {
        COMPREPLY=()
        _get_comp_words_by_ref cur prev words cword
    }
fi

_()
{
    local cur
    local prev
    local words
    local cword

    # The reference of currently selected REST operation
    local operation=""

    # The list of available operation in the REST service
    # It's modelled as an associative array for efficient key lookup
    declare -A operations
    operations["apiV1BlueprintsBlueprintIdAssignLibraryItemPost"]=1
    operations["apiV1BlueprintsBlueprintIdDelete"]=1
    operations["apiV1BlueprintsBlueprintIdGet"]=1
    operations["apiV1BlueprintsBlueprintIdListLibraryItemsGet"]=1
    operations["apiV1BlueprintsBlueprintIdOtaEnrollmentProfileGet"]=1
    operations["apiV1BlueprintsBlueprintIdPatch"]=1
    operations["apiV1BlueprintsBlueprintIdRemoveLibraryItemPost"]=1
    operations["apiV1BlueprintsGet"]=1
    operations["apiV1BlueprintsPost"]=1
    operations["apiV1BlueprintsTemplatesGet"]=1
    operations["apiV1DevicesDeviceIdActionBlankpushPost"]=1
    operations["apiV1DevicesDeviceIdActionClearpasscodePost"]=1
    operations["apiV1DevicesDeviceIdActionDeleteuserPost"]=1
    operations["apiV1DevicesDeviceIdActionDisablelostmodePost"]=1
    operations["apiV1DevicesDeviceIdActionEnablelostmodePost"]=1
    operations["apiV1DevicesDeviceIdActionErasePost"]=1
    operations["apiV1DevicesDeviceIdActionLockPost"]=1
    operations["apiV1DevicesDeviceIdActionPlaylostmodesoundPost"]=1
    operations["apiV1DevicesDeviceIdActionReinstallagentPost"]=1
    operations["apiV1DevicesDeviceIdActionRemotedesktopPost"]=1
    operations["apiV1DevicesDeviceIdActionRenewmdmprofilePost"]=1
    operations["apiV1DevicesDeviceIdActionRestartPost"]=1
    operations["apiV1DevicesDeviceIdActionSetnamePost"]=1
    operations["apiV1DevicesDeviceIdActionShutdownPost"]=1
    operations["apiV1DevicesDeviceIdActionUnlockaccountPost"]=1
    operations["apiV1DevicesDeviceIdActionUpdateinventoryPost"]=1
    operations["apiV1DevicesDeviceIdActionUpdatelocationPost"]=1
    operations["apiV1DevicesDeviceIdActivitylimit300Get"]=1
    operations["apiV1DevicesDeviceIdAppsGet"]=1
    operations["apiV1DevicesDeviceIdCommandslimit300Get"]=1
    operations["apiV1DevicesDeviceIdDelete"]=1
    operations["apiV1DevicesDeviceIdDetailsGet"]=1
    operations["apiV1DevicesDeviceIdDetailsLostmodeDelete"]=1
    operations["apiV1DevicesDeviceIdDetailsLostmodeGet"]=1
    operations["apiV1DevicesDeviceIdGet"]=1
    operations["apiV1DevicesDeviceIdLibraryItemsGet"]=1
    operations["apiV1DevicesDeviceIdNotesGet"]=1
    operations["apiV1DevicesDeviceIdNotesNoteIdDelete"]=1
    operations["apiV1DevicesDeviceIdNotesNoteIdGet"]=1
    operations["apiV1DevicesDeviceIdNotesNoteIdPatch"]=1
    operations["apiV1DevicesDeviceIdNotesPost"]=1
    operations["apiV1DevicesDeviceIdParametersGet"]=1
    operations["apiV1DevicesDeviceIdPatch"]=1
    operations["apiV1DevicesDeviceIdSecretsBypasscodeGet"]=1
    operations["apiV1DevicesDeviceIdSecretsFilevaultkeyGet"]=1
    operations["apiV1DevicesDeviceIdSecretsRecoverypasswordGet"]=1
    operations["apiV1DevicesDeviceIdSecretsUnlockpinGet"]=1
    operations["apiV1DevicesDeviceIdStatusGet"]=1
    operations["apiV1Deviceslimit300Get"]=1
    operations["apiV1IntegrationsAppleAdeAdeTokenIdDelete"]=1
    operations["apiV1IntegrationsAppleAdeAdeTokenIdDevicesGet"]=1
    operations["apiV1IntegrationsAppleAdeAdeTokenIdGet"]=1
    operations["apiV1IntegrationsAppleAdeAdeTokenIdPatch"]=1
    operations["apiV1IntegrationsAppleAdeAdeTokenIdRenewPost"]=1
    operations["apiV1IntegrationsAppleAdeDevicesDeviceIdGet"]=1
    operations["apiV1IntegrationsAppleAdeDevicesDeviceIdPatch"]=1
    operations["apiV1IntegrationsAppleAdeDevicesGet"]=1
    operations["apiV1IntegrationsAppleAdeGet"]=1
    operations["apiV1IntegrationsAppleAdePost"]=1
    operations["apiV1IntegrationsAppleAdePublicKeyGet"]=1
    operations["apiV1LibraryCustomAppsGet"]=1
    operations["apiV1LibraryCustomAppsLibraryItemIdDelete"]=1
    operations["apiV1LibraryCustomAppsLibraryItemIdGet"]=1
    operations["apiV1LibraryCustomAppsLibraryItemIdPatch"]=1
    operations["apiV1LibraryCustomAppsPost"]=1
    operations["apiV1LibraryCustomAppsUploadPost"]=1
    operations["apiV1LibraryCustomProfilesGet"]=1
    operations["apiV1LibraryCustomProfilesLibraryItemIdDelete"]=1
    operations["apiV1LibraryCustomProfilesLibraryItemIdGet"]=1
    operations["apiV1LibraryCustomProfilesLibraryItemIdPatch"]=1
    operations["apiV1LibraryCustomProfilesPost"]=1
    operations["apiV1LibraryCustomScriptsGet"]=1
    operations["apiV1LibraryCustomScriptsLibraryItemIdDelete"]=1
    operations["apiV1LibraryCustomScriptsLibraryItemIdGet"]=1
    operations["apiV1LibraryCustomScriptsLibraryItemIdPatch"]=1
    operations["apiV1LibraryCustomScriptsPost"]=1
    operations["apiV1LibraryLibraryItemsLibraryItemIdActivityGet"]=1
    operations["apiV1LibraryLibraryItemsLibraryItemIdStatusGet"]=1
    operations["apiV1PrismActivationLockGet"]=1
    operations["apiV1PrismApplicationFirewallGet"]=1
    operations["apiV1PrismAppsGet"]=1
    operations["apiV1PrismCertificatesGet"]=1
    operations["apiV1PrismCountcategoryappsGet"]=1
    operations["apiV1PrismDesktopAndScreensaverGet"]=1
    operations["apiV1PrismDeviceInformationGet"]=1
    operations["apiV1PrismExportExportIdGet"]=1
    operations["apiV1PrismExportPost"]=1
    operations["apiV1PrismFilevaultGet"]=1
    operations["apiV1PrismGatekeeperAndXprotectGet"]=1
    operations["apiV1PrismInstalledProfilesGet"]=1
    operations["apiV1PrismKernelExtensionsGet"]=1
    operations["apiV1PrismLaunchAgentsAndDaemonsGet"]=1
    operations["apiV1PrismLocalUsersGet"]=1
    operations["apiV1PrismStartupSettingsGet"]=1
    operations["apiV1PrismSystemExtensionsGet"]=1
    operations["apiV1PrismTransparencyDatabaseGet"]=1
    operations["apiV1SelfServiceCategoriesGet"]=1
    operations["apiV1SettingsLicensingGet"]=1
    operations["apiV1TagsPost"]=1
    operations["apiV1TagsTagIdDelete"]=1
    operations["apiV1TagsTagIdPatch"]=1
    operations["apiV1TagssearchaccuhiveGet"]=1
    operations["apiV1ThreatDetailsGet"]=1
    operations["apiV1UsersGet"]=1
    operations["apiV1UsersUserIdGet"]=1
    operations["postUrlPost"]=1

    # An associative array of operations to their parameters
    # Only include path, query and header parameters
    declare -A operation_parameters
    operation_parameters["apiV1BlueprintsBlueprintIdAssignLibraryItemPost"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsBlueprintIdDelete"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsBlueprintIdGet"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsBlueprintIdListLibraryItemsGet"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsBlueprintIdOtaEnrollmentProfileGet"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsBlueprintIdPatch"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsBlueprintIdRemoveLibraryItemPost"]="blueprint_id= "
    operation_parameters["apiV1BlueprintsGet"]=""
    operation_parameters["apiV1BlueprintsPost"]=""
    operation_parameters["apiV1BlueprintsTemplatesGet"]=""
    operation_parameters["apiV1DevicesDeviceIdActionBlankpushPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionClearpasscodePost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionDeleteuserPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionDisablelostmodePost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionEnablelostmodePost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionErasePost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionLockPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionPlaylostmodesoundPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionReinstallagentPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionRemotedesktopPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionRenewmdmprofilePost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionRestartPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionSetnamePost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionShutdownPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionUnlockaccountPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionUpdateinventoryPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActionUpdatelocationPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdActivitylimit300Get"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdAppsGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdCommandslimit300Get"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdDelete"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdDetailsGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdDetailsLostmodeDelete"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdDetailsLostmodeGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdLibraryItemsGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdNotesGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdNotesNoteIdDelete"]="device_id= note_id= "
    operation_parameters["apiV1DevicesDeviceIdNotesNoteIdGet"]="device_id= note_id= "
    operation_parameters["apiV1DevicesDeviceIdNotesNoteIdPatch"]="device_id= note_id= Authorization: Content-Type: "
    operation_parameters["apiV1DevicesDeviceIdNotesPost"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdParametersGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdPatch"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdSecretsBypasscodeGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdSecretsFilevaultkeyGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdSecretsRecoverypasswordGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdSecretsUnlockpinGet"]="device_id= "
    operation_parameters["apiV1DevicesDeviceIdStatusGet"]="device_id= "
    operation_parameters["apiV1Deviceslimit300Get"]=""
    operation_parameters["apiV1IntegrationsAppleAdeAdeTokenIdDelete"]="ade_token_id= "
    operation_parameters["apiV1IntegrationsAppleAdeAdeTokenIdDevicesGet"]="ade_token_id= "
    operation_parameters["apiV1IntegrationsAppleAdeAdeTokenIdGet"]="ade_token_id= "
    operation_parameters["apiV1IntegrationsAppleAdeAdeTokenIdPatch"]="ade_token_id= "
    operation_parameters["apiV1IntegrationsAppleAdeAdeTokenIdRenewPost"]="ade_token_id= "
    operation_parameters["apiV1IntegrationsAppleAdeDevicesDeviceIdGet"]="device_id= "
    operation_parameters["apiV1IntegrationsAppleAdeDevicesDeviceIdPatch"]="device_id= "
    operation_parameters["apiV1IntegrationsAppleAdeDevicesGet"]=""
    operation_parameters["apiV1IntegrationsAppleAdeGet"]=""
    operation_parameters["apiV1IntegrationsAppleAdePost"]=""
    operation_parameters["apiV1IntegrationsAppleAdePublicKeyGet"]=""
    operation_parameters["apiV1LibraryCustomAppsGet"]=""
    operation_parameters["apiV1LibraryCustomAppsLibraryItemIdDelete"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomAppsLibraryItemIdGet"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomAppsLibraryItemIdPatch"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomAppsPost"]=""
    operation_parameters["apiV1LibraryCustomAppsUploadPost"]=""
    operation_parameters["apiV1LibraryCustomProfilesGet"]=""
    operation_parameters["apiV1LibraryCustomProfilesLibraryItemIdDelete"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomProfilesLibraryItemIdGet"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomProfilesLibraryItemIdPatch"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomProfilesPost"]=""
    operation_parameters["apiV1LibraryCustomScriptsGet"]=""
    operation_parameters["apiV1LibraryCustomScriptsLibraryItemIdDelete"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomScriptsLibraryItemIdGet"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomScriptsLibraryItemIdPatch"]="library_item_id= "
    operation_parameters["apiV1LibraryCustomScriptsPost"]=""
    operation_parameters["apiV1LibraryLibraryItemsLibraryItemIdActivityGet"]="library_item_id= "
    operation_parameters["apiV1LibraryLibraryItemsLibraryItemIdStatusGet"]="library_item_id= "
    operation_parameters["apiV1PrismActivationLockGet"]=""
    operation_parameters["apiV1PrismApplicationFirewallGet"]=""
    operation_parameters["apiV1PrismAppsGet"]=""
    operation_parameters["apiV1PrismCertificatesGet"]=""
    operation_parameters["apiV1PrismCountcategoryappsGet"]=""
    operation_parameters["apiV1PrismDesktopAndScreensaverGet"]=""
    operation_parameters["apiV1PrismDeviceInformationGet"]=""
    operation_parameters["apiV1PrismExportExportIdGet"]="export_id= "
    operation_parameters["apiV1PrismExportPost"]=""
    operation_parameters["apiV1PrismFilevaultGet"]=""
    operation_parameters["apiV1PrismGatekeeperAndXprotectGet"]=""
    operation_parameters["apiV1PrismInstalledProfilesGet"]=""
    operation_parameters["apiV1PrismKernelExtensionsGet"]=""
    operation_parameters["apiV1PrismLaunchAgentsAndDaemonsGet"]=""
    operation_parameters["apiV1PrismLocalUsersGet"]=""
    operation_parameters["apiV1PrismStartupSettingsGet"]=""
    operation_parameters["apiV1PrismSystemExtensionsGet"]=""
    operation_parameters["apiV1PrismTransparencyDatabaseGet"]=""
    operation_parameters["apiV1SelfServiceCategoriesGet"]=""
    operation_parameters["apiV1SettingsLicensingGet"]=""
    operation_parameters["apiV1TagsPost"]=""
    operation_parameters["apiV1TagsTagIdDelete"]="tag_id= "
    operation_parameters["apiV1TagsTagIdPatch"]="tag_id= "
    operation_parameters["apiV1TagssearchaccuhiveGet"]=""
    operation_parameters["apiV1ThreatDetailsGet"]=""
    operation_parameters["apiV1UsersGet"]=""
    operation_parameters["apiV1UsersUserIdGet"]="user_id= "
    operation_parameters["postUrlPost"]="post_url= "

    # An associative array of possible values for enum parameters
    declare -A operation_parameters_enum_values

    #
    # Check if this is OSX and use special __osx_init_completion function
    #
    if [[ `uname` =~ "Darwin" ]]; then
        __osx_init_completion || return
    else
        _init_completion -s || return
    fi


    # Check if operation is already in the command line provided
    for word in "${words[@]}"; do
        if [[ -n $word && ${operations[$word]} ]]; then
            operation="${word}"
        fi
    done

    if [[ -z $operation ]]; then
        case $prev in
            --ciphers|--connect-timeout|-C|--continue-at|-F|--form|--form-string|\
            --ftp-account|--ftp-alternative-to-user|-P|--ftp-port|-H|--header|-h|\
            --help|--hostpubmd5|--keepalive-time|--krb|--limit-rate|--local-port|\
            --mail-from|--mail-rcpt|--max-filesize|--max-redirs|-m|--max-time|\
            --pass|--proto|--proto-redir|--proxy-user|--proxy1.0|-Q|--quote|-r|\
            --range|-X|--request|--retry|--retry-delay|--retry-max-time|\
            --socks5-gssapi-service|-t|--telnet-option|--tftp-blksize|-z|\
            --time-cond|--url|-u|--user|-A|--user-agent|-V|--version|-w|\
            --write-out|--resolve|--tlsuser|--tlspassword|--about)
                return
                ;;
            -K|--config|-b|--cookie|-c|--cookie-jar|-D|--dump-header|--egd-file|\
            --key|--libcurl|-o|--output|--random-file|-T|--upload-file|--trace|\
            --trace-ascii|--netrc-file)
                _filedir
                return
                ;;
            --cacert|-E|--cert)
                _filedir '@(c?(e)rt|cer|pem|der)'
                return
                ;;
            --capath)
                _filedir -d
                return
                ;;
            --cert-type|--key-type)
                COMPREPLY=( $( compgen -W 'DER PEM ENG' -- "$cur" ) )
                return
                ;;
            --crlfile)
                _filedir crl
                return
                ;;
            -d|--data|--data-ascii|--data-binary|--data-urlencode)
                if [[ $cur == \@* ]]; then
                    cur=${cur:1}
                    _filedir
                    COMPREPLY=( "${COMPREPLY[@]/#/@}" )
                fi
                return
                ;;
            --delegation)
                COMPREPLY=( $( compgen -W 'none policy always' -- "$cur" ) )
                return
                ;;
            --engine)
                COMPREPLY=( $( compgen -W 'list' -- "$cur" ) )
                return
                ;;
            --ftp-method)
                COMPREPLY=( $( compgen -W 'multicwd nocwd singlecwd' -- "$cur" ) )
                return
                ;;
            --ftp-ssl-ccc-mode)
                COMPREPLY=( $( compgen -W 'active passive' -- "$cur" ) )
                return
                ;;
            --interface)
                _available_interfaces -a
                return
                ;;
            -x|--proxy|--socks4|--socks4a|--socks5|--socks5-hostname)
                _known_hosts_real
                return
                ;;
            --pubkey)
                _filedir pub
                return
                ;;
            --stderr)
                COMPREPLY=( $( compgen -W '-' -- "$cur" ) )
                _filedir
                return
                ;;
            --tlsauthtype)
                COMPREPLY=( $( compgen -W 'SRP' -- "$cur" ) )
                return
                ;;
            --host)
                COMPREPLY=( $( compgen -W 'http:// https://' -- "$cur" ) )
                return
                ;;
            -ct|--content-type|-ac|--accept)
                COMPREPLY=( $( compgen -W '${!mime_type_abbreviations[*]}' -- "$cur" ) )
                return
                ;;
        esac
    fi

    #
    # Complete the server address based on ~/.ssh/known_hosts
    # and ~/.ssh/config
    #
    local prefix=${COMP_WORDS[COMP_CWORD-2]}
    local colon=${COMP_WORDS[COMP_CWORD-1]}
    if [[ "$colon" == ":" && ( $prefix == "https" || $prefix == "http" ) ]]; then
        COMPREPLY=()
        local comp_ssh_hosts=`[[ -f ~/.ssh/known_hosts ]] && \
                              ( cat ~/.ssh/known_hosts | \
                              grep '^[a-zA-Z0-9]' | \
                              cut -f 1 -d ' ' | \
                              sed -e s/,.*//g | \
                              grep -v ^# | \
                              uniq | \
                              grep -v "\[" ) ;
                              [[ -f ~/.ssh/config ]] && \
                              ( cat ~/.ssh/config | \
                              grep "^Host " | \
                              awk '{print $2}' )`
        COMPREPLY=( $( compgen -P '//' -W '${comp_ssh_hosts}' -- "${cur:2}") )
        return
    fi

    #
    # Complete the  and cURL's arguments
    #
    if [[ $cur == -* ]]; then
        COMPREPLY=( $( compgen -W '$(_parse_help curl) $(_parse_help $1)' -- "$cur" ) )
        return
    fi

    #
    # If the argument starts with a letter this could be either an operation
    # or an operation parameter
    # When $cur is empty, suggest the list of operations by default
    #
    if [[ $cur =~ ^[A-Za-z_0-9]* ]]; then
        # If operation has not been yet selected, suggest the list of operations
        # otherwise suggest arguments of this operation as declared in the
        # OpenAPI specification
        if [[ -z $operation ]]; then
            COMPREPLY=( $(compgen -W '${!operations[*]}' -- ${cur}) )
        else
            COMPREPLY=( $(compgen -W '${operation_parameters[$operation]}' -- ${cur}) )
            compopt -o nospace
        fi
        return
    fi

} &&
complete -F _ 

# ex: ts=4 sw=4 et filetype=sh
